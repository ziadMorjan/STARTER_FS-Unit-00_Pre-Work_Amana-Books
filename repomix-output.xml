This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.gitignore
eslint.config.mjs
next.config.ts
package.json
postcss.config.mjs
public/file.svg
public/globe.svg
public/next.svg
public/vercel.svg
public/window.svg
README.md
src/app/api/books/route.ts
src/app/api/cart/route.ts
src/app/book/[id]/page.tsx
src/app/cart/page.tsx
src/app/components/BookCard.tsx
src/app/components/BookGrid.tsx
src/app/components/BookListItem.tsx
src/app/components/CartItem.tsx
src/app/components/Navbar.tsx
src/app/components/Pagination.tsx
src/app/data/books.ts
src/app/data/cart.ts
src/app/data/reviews.ts
src/app/globals.css
src/app/layout.tsx
src/app/page.tsx
src/app/types/index.ts
tsconfig.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".gitignore">
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts
</file>

<file path="eslint.config.mjs">
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
  {
    ignores: [
      "node_modules/**",
      ".next/**",
      "out/**",
      "build/**",
      "next-env.d.ts",
    ],
  },
];

export default eslintConfig;
</file>

<file path="next.config.ts">
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;
</file>

<file path="package.json">
{
  "name": "amana-bookstore",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "eslint"
  },
  "dependencies": {
    "react": "19.1.0",
    "react-dom": "19.1.0",
    "next": "15.5.0"
  },
  "devDependencies": {
    "typescript": "^5",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@tailwindcss/postcss": "^4",
    "tailwindcss": "^4",
    "eslint": "^9",
    "eslint-config-next": "15.5.0",
    "@eslint/eslintrc": "^3"
  }
}
</file>

<file path="postcss.config.mjs">
const config = {
  plugins: ["@tailwindcss/postcss"],
};

export default config;
</file>

<file path="public/file.svg">
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>
</file>

<file path="public/globe.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>
</file>

<file path="public/next.svg">
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
</file>

<file path="public/vercel.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>
</file>

<file path="public/window.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>
</file>

<file path="README.md">
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.
</file>

<file path="src/app/api/books/route.ts">
// src/app/api/books/route.ts
import { NextResponse } from 'next/server';
import { books } from '../../data/books';

// GET /api/books - Return all books
export async function GET() {
  try {
    return NextResponse.json(books);
  } catch (err) {
    console.error('Error fetching books:', err);
    return NextResponse.json(
      { error: 'Failed to fetch books' },
      { status: 500 }
    );
  }
}

// Future implementation notes:
// - Connect to a database (e.g., PostgreSQL, MongoDB)
// - Add authentication middleware for admin operations
// - Implement pagination for large datasets
// - Add filtering and search query parameters
// - Include proper error handling and logging
// - Add rate limiting for API protection
// - Implement caching strategies for better performance

// Example future database integration:
// import { db } from '@/lib/database';
// 
// export async function GET(request: Request) {
//   const { searchParams } = new URL(request.url);
//   const page = parseInt(searchParams.get('page') || '1');
//   const limit = parseInt(searchParams.get('limit') || '10');
//   const genre = searchParams.get('genre');
//   
//   try {
//     const books = await db.books.findMany({
//       where: genre ? { genre: { contains: genre } } : {},
//       skip: (page - 1) * limit,
//       take: limit,
//     });
//     
//     return NextResponse.json(books);
//   } catch (error) {
//     return NextResponse.json(
//       { error: 'Database connection failed' },
//       { status: 500 }
//     );
//   }
// }
</file>

<file path="src/app/api/cart/route.ts">
// src/app/api/cart/route.ts
import { NextResponse } from 'next/server';

// GET /api/cart - Get cart items
export async function GET() {
  // In a real application, this would fetch cart items from a database
  // based on user session or authentication token
  return NextResponse.json({ message: 'Cart API endpoint - GET method' });
}

// POST /api/cart - Add item to cart
export async function POST(request: Request) {
  try {
    const body = await request.json();
    // In a real application, this would add an item to the user's cart in the database
    return NextResponse.json({ 
      message: 'Item added to cart successfully',
      item: body 
    });
  } catch (err) {
    console.error('Error adding item to cart:', err);
    return NextResponse.json(
      { error: 'Failed to add item to cart' },
      { status: 500 }
    );
  }
}

// PUT /api/cart - Update cart item
export async function PUT(request: Request) {
  try {
    const body = await request.json();
    // In a real application, this would update an existing cart item
    return NextResponse.json({ 
      message: 'Cart item updated successfully',
      item: body 
    });
  } catch (err) {
    console.error('Error updating cart item:', err);
    return NextResponse.json(
      { error: 'Failed to update cart item' },
      { status: 500 }
    );
  }
}

// DELETE /api/cart - Remove item from cart
export async function DELETE(request: Request) {
  try {
    const { searchParams } = new URL(request.url);
    const itemId = searchParams.get('itemId');
    
    // In a real application, this would remove an item from the user's cart
    return NextResponse.json({ 
      message: 'Item removed from cart successfully',
      itemId 
    });
  } catch (err) {
    console.error('Error removing cart item:', err);
    return NextResponse.json(
      { error: 'Failed to remove item from cart' },
      { status: 500 }
    );
  }
}

// Future implementation notes:
// - Session management for user carts (using NextAuth.js or similar)
// - Database integration patterns (Prisma, Drizzle, or raw SQL)
// - Cart persistence strategies:
//   * Guest carts: Store in localStorage/cookies with optional merge on login
//   * User carts: Store in database with user ID association
//   * Hybrid approach: localStorage for guests, database for authenticated users
// - Security considerations:
//   * Validate user ownership of cart items
//   * Sanitize input data
//   * Rate limiting to prevent abuse
// - Performance optimizations:
//   * Cache frequently accessed cart data
//   * Batch operations for multiple item updates
//   * Implement optimistic updates on the frontend

// Example future database integration:
// import { db } from '@/lib/database';
// import { getServerSession } from 'next-auth';
// 
// export async function GET() {
//   const session = await getServerSession();
//   if (!session?.user?.id) {
//     return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
//   }
//   
//   try {
//     const cartItems = await db.cartItem.findMany({
//       where: { userId: session.user.id },
//       include: { book: true }
//     });
//     
//     return NextResponse.json(cartItems);
//   } catch (error) {
//     return NextResponse.json(
//       { error: 'Failed to fetch cart items' },
//       { status: 500 }
//     );
//   }
// }
</file>

<file path="src/app/data/cart.ts">
// src/app/data/cart.ts
import { CartItem } from '../types';

export const initialCart: CartItem[] = [];
</file>

<file path="src/app/globals.css">
@import "tailwindcss";

/* Override dark mode to ensure light theme */
@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: light;
  }
}

/* Ensure light background without conflicting with Tailwind */
html {
  background-color: #f9fafb;
}
</file>

<file path="src/app/layout.tsx">
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Navbar from './components/Navbar';
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: 'Amana Bookstore',
  description: 'A modern online bookstore built with Next.js and Tailwind CSS.',
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  // NOTE: In a real-world application, cart state would be managed globally using
  // Context API or a state management library like Zustand or Redux.
  // The cart item count for the Navbar is managed on the client-side within the component itself
  // to adhere to the project's constraint of not using Context API.
  // Each page interacting with the cart will manage its state via localStorage.

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-50 pt-16`}>
        <Navbar />
        <main>{children}</main>
      </body>
    </html>
  );
}
</file>

<file path="tsconfig.json">
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
</file>

<file path="src/app/components/BookListItem.tsx">
// src/app/components/BookListItem.tsx
'use client';

import React, { useState } from 'react';
import Link from 'next/link';
import { Book } from '../types';

interface BookListItemProps {
  book: Book;
  onAddToCart?: (bookId: string) => void;
}

const BookListItem: React.FC<BookListItemProps> = ({ book, onAddToCart }) => {
  const [isAddingToCart, setIsAddingToCart] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);

  // Function to render star ratings
  const renderStars = (rating: number) => {
    const stars = [];
    const fullStars = Math.floor(rating);
    const hasHalfStar = rating % 1 >= 0.5;
    
    for (let i = 1; i <= 5; i++) {
      if (i <= fullStars) {
        // Full star
        stars.push(
          <svg key={i} className="w-4 h-4 text-yellow-400 fill-current" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
        );
      } else if (i === fullStars + 1 && hasHalfStar) {
        // Half star
        stars.push(
          <div key={i} className="relative w-4 h-4">
            <svg className="w-4 h-4 text-gray-300 fill-current absolute" viewBox="0 0 20 20">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
            </svg>
            <div className="absolute inset-0 overflow-hidden w-1/2">
              <svg className="w-4 h-4 text-yellow-400 fill-current" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
              </svg>
            </div>
          </div>
        );
      } else {
        // Empty star
        stars.push(
          <svg key={i} className="w-4 h-4 text-gray-300 fill-current" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
        );
      }
    }
    return <div className="flex items-center">{stars}</div>;
  };

  // Handle add to cart
  const handleAddToCart = async (e: React.MouseEvent) => {
    e.preventDefault();
    e.stopPropagation();
    
    if (!book.inStock || isAddingToCart) return;
    
    setIsAddingToCart(true);
    
    try {
      await new Promise(resolve => setTimeout(resolve, 500));
      
      if (onAddToCart) {
        onAddToCart(book.id);
      }
      
      setShowSuccess(true);
      setTimeout(() => setShowSuccess(false), 2000);
    } catch (error) {
      console.error('Error adding to cart:', error);
    } finally {
      setIsAddingToCart(false);
    }
  };

  return (
    <div className="bg-white rounded-lg shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-200">
      <div className="flex items-center p-4 gap-4">
        {/* Book Cover/Icon - Left Side */}
        <Link href={`/book/${book.id}`} className="flex-shrink-0 cursor-pointer">
          <div className="w-16 h-20 bg-gray-200 rounded-md flex items-center justify-center hover:bg-gray-300 transition-colors duration-200">
            <div className="text-2xl text-gray-400">📚</div>
          </div>
        </Link>

        {/* Book Information - Right Side */}
        <div className="flex-1 min-w-0">
          <div className="flex items-start justify-between gap-4">
            {/* Main Info */}
            <div className="flex-1 min-w-0">
              <Link href={`/book/${book.id}`} className="block group cursor-pointer">
                <h3 className="text-lg font-semibold text-gray-800 truncate group-hover:text-blue-600 transition-colors duration-200">
                  {book.title}
                </h3>
                <p className="text-sm text-gray-600 mt-1">by {book.author}</p>
              </Link>

              {/* Rating and Reviews */}
              <div className="flex items-center mt-2 gap-2">
                {renderStars(book.rating)}
                <span className="text-sm text-gray-500">
                  {book.rating.toFixed(1)} ({book.reviewCount.toLocaleString()} reviews)
                </span>
              </div>

              {/* Genres */}
              <div className="flex flex-wrap gap-1 mt-2">
                {book.genre.slice(0, 3).map((genre) => (
                  <span 
                    key={genre} 
                    className="inline-block bg-gray-100 rounded-full px-2 py-1 text-xs font-medium text-gray-700"
                  >
                    {genre}
                  </span>
                ))}
                {book.genre.length > 3 && (
                  <span className="text-xs text-gray-500 px-2 py-1">
                    +{book.genre.length - 3} more
                  </span>
                )}
              </div>

              {/* Stock Status */}
              {!book.inStock && (
                <span className="inline-block bg-red-100 text-red-800 text-xs font-medium px-2 py-1 rounded-full mt-2">
                  Out of Stock
                </span>
              )}
            </div>

            {/* Price and Actions */}
            <div className="flex flex-col items-end gap-3">
              <div className="text-right">
                <p className="text-xl font-bold text-gray-900">${book.price.toFixed(2)}</p>
                {book.featured && (
                  <span className="inline-block bg-blue-100 text-blue-800 text-xs font-medium px-2 py-1 rounded-full mt-1">
                    Featured
                  </span>
                )}
              </div>

              {/* Action Buttons */}
              <div className="flex flex-col gap-2 min-w-[120px]">
                <Link href={`/book/${book.id}`} className="cursor-pointer">
                  <button className="w-full px-3 py-2 text-sm border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors duration-200 cursor-pointer">
                    View Details
                  </button>
                </Link>
                
                <button
                  onClick={handleAddToCart}
                  disabled={!book.inStock || isAddingToCart}
                  className={`w-full px-3 py-2 text-sm rounded-md transition-colors duration-200 ${
                    !book.inStock
                      ? 'bg-gray-100 text-gray-400 cursor-not-allowed'
                      : showSuccess
                      ? 'bg-green-600 text-white cursor-pointer'
                      : isAddingToCart
                      ? 'bg-blue-400 text-white cursor-wait'
                      : 'bg-blue-600 text-white hover:bg-blue-700 cursor-pointer'
                  }`}
                >
                  {showSuccess ? (
                    <span className="flex items-center justify-center gap-1">
                      <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                      </svg>
                      Added!
                    </span>
                  ) : isAddingToCart ? (
                    <span className="flex items-center justify-center gap-1">
                      <svg className="animate-spin w-4 h-4" fill="none" viewBox="0 0 24 24">
                        <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                        <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                      Adding...
                    </span>
                  ) : (
                    'Add to Cart'
                  )}
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default BookListItem;
</file>

<file path="src/app/components/CartItem.tsx">
// src/app/components/CartItem.tsx
'use client';

import React from 'react';
import Link from 'next/link';
import { Book } from '../types';

interface CartItemProps {
  item: { book: Book; quantity: number };
  onUpdateQuantity: (bookId: string, quantity: number) => void;
  onRemoveItem: (bookId: string) => void;
}

const CartItem: React.FC<CartItemProps> = ({ item, onUpdateQuantity, onRemoveItem }) => {
  const { book, quantity } = item;

  // Calculate subtotal for the cart item
  const subtotal = (book.price * quantity).toFixed(2);

  return (
    <div className="flex items-center justify-between p-4 border-b border-gray-200">
      <div className="flex items-center space-x-4">
        <div className="relative h-24 w-16 bg-gray-200 flex items-center justify-center rounded-md">
          {/* Book Icon Placeholder */}
          <div className="text-2xl text-gray-400">📚</div>
        </div>
        <div>
          <Link href={`/book/${book.id}`} className="text-lg font-semibold text-gray-800 hover:text-blue-500 cursor-pointer">
            {book.title}
          </Link>
          <p className="text-sm text-gray-600">by {book.author}</p>
          <p className="text-md font-bold text-gray-900 mt-1">${book.price.toFixed(2)}</p>
        </div>
      </div>
      <div className="flex items-center space-x-4">
        <div className="flex items-center space-x-2">
          <button 
            onClick={() => onUpdateQuantity(book.id, quantity - 1)}
            disabled={quantity <= 1}
            className="px-2 py-1 border rounded-md hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer"
          >
            -
          </button>
          <span>{quantity}</span>
          <button 
            onClick={() => onUpdateQuantity(book.id, quantity + 1)}
            className="px-2 py-1 border rounded-md hover:bg-gray-100 cursor-pointer"
          >
            +
          </button>
        </div>
        <p className="text-md font-semibold w-20 text-right">${subtotal}</p>
        <button 
          onClick={() => onRemoveItem(book.id)}
          className="text-red-500 hover:text-red-700 font-semibold cursor-pointer"
        >
          Remove
        </button>
      </div>
    </div>
  );
};

export default CartItem;
</file>

<file path="src/app/components/Navbar.tsx">
// src/app/components/Navbar.tsx
'use client';

import Link from 'next/link';
import { usePathname } from 'next/navigation';

import { useState, useEffect } from 'react';
import { CartItem } from '../types';

const Navbar: React.FC = () => {
  const [cartItemCount, setCartItemCount] = useState(0);
  const pathname = usePathname();

  useEffect(() => {
    // This function updates the cart count from localStorage.
    // It's designed to run on the client side only.
    const updateCartCount = () => {
      const storedCart = localStorage.getItem('cart');
      if (storedCart) {
        try {
          const cart: CartItem[] = JSON.parse(storedCart);
          const count = cart.reduce((total, item) => total + item.quantity, 0);
          setCartItemCount(count);
        } catch (error) {
          console.error('Failed to parse cart from localStorage', error);
          setCartItemCount(0);
        }
      } else {
        setCartItemCount(0);
      }
    };

    // Initial update
    updateCartCount();

    // Listen for custom event to update cart count
    window.addEventListener('cartUpdated', updateCartCount);

    // Clean up the event listener
    return () => {
      window.removeEventListener('cartUpdated', updateCartCount);
    };
  }, []);
  
  return (
    <nav className="bg-white shadow-md fixed w-full top-0 z-10">
      <div className="container mx-auto px-6 py-3 flex justify-between items-center">
        <Link href="/" className="text-2xl font-bold text-gray-800 cursor-pointer">
          Amana Bookstore
        </Link>
        <div className="flex items-center space-x-4">
          <Link href="/" className={`text-gray-600 hover:text-blue-500 cursor-pointer ${pathname === '/' ? 'text-blue-500 font-semibold' : ''}`}>
            Home
          </Link>
          <Link href="/cart" className={`text-gray-600 hover:text-blue-500 flex items-center cursor-pointer ${pathname === '/cart' ? 'text-blue-500 font-semibold' : ''}`}>
            My Cart
            {cartItemCount > 0 && (
              <span className="ml-2 bg-blue-500 text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center">
                {cartItemCount}
              </span>
            )}
          </Link>
        </div>
      </div>
    </nav>
  );
};

export default Navbar;
</file>

<file path="src/app/components/Pagination.tsx">
// src/app/components/Pagination.tsx
'use client';

import React from 'react';

interface PaginationProps {
  currentPage: number;
  totalPages: number;
  onPageChange: (page: number) => void;
  itemsPerPage: number;
  totalItems: number;
  onItemsPerPageChange?: (itemsPerPage: number) => void;
}

const Pagination: React.FC<PaginationProps> = ({
  currentPage,
  totalPages,
  onPageChange,
  itemsPerPage,
  totalItems,
  onItemsPerPageChange,
}) => {
  // Calculate range of items being displayed
  const startItem = (currentPage - 1) * itemsPerPage + 1;
  const endItem = Math.min(currentPage * itemsPerPage, totalItems);

  // Generate page numbers to display
  const getPageNumbers = () => {
    const pages: (number | string)[] = [];
    const maxPagesToShow = 7;

    if (totalPages <= maxPagesToShow) {
      // Show all pages if total is small
      for (let i = 1; i <= totalPages; i++) {
        pages.push(i);
      }
    } else {
      // Always show first page
      pages.push(1);

      if (currentPage > 4) {
        pages.push('...');
      }

      // Show pages around current page
      const start = Math.max(2, currentPage - 1);
      const end = Math.min(totalPages - 1, currentPage + 1);

      for (let i = start; i <= end; i++) {
        if (i !== 1 && i !== totalPages) {
          pages.push(i);
        }
      }

      if (currentPage < totalPages - 3) {
        pages.push('...');
      }

      // Always show last page if there's more than one page
      if (totalPages > 1) {
        pages.push(totalPages);
      }
    }

    return pages;
  };

  if (totalPages <= 1) {
    return null; // Don't show pagination if there's only one page
  }

  return (
    <div className="flex flex-col items-center space-y-4 mt-8">
      {/* Items info */}
      <div className="text-sm text-gray-600">
        Showing {startItem} to {endItem} of {totalItems} books
      </div>

      {/* Pagination controls */}
      <div className="flex items-center space-x-2">
        {/* Previous button */}
        <button
          onClick={() => onPageChange(currentPage - 1)}
          disabled={currentPage === 1}
          className={`px-3 py-2 rounded-lg border text-sm font-medium transition-colors ${
            currentPage === 1
              ? 'bg-gray-100 text-gray-400 border-gray-200 cursor-not-allowed'
              : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50 hover:border-gray-400 cursor-pointer'
          }`}
          aria-label="Previous page"
        >
          Previous
        </button>

        {/* Page numbers */}
        <div className="flex items-center space-x-1">
          {getPageNumbers().map((page, index) => (
            <React.Fragment key={index}>
              {page === '...' ? (
                <span className="px-3 py-2 text-gray-500">...</span>
              ) : (
                <button
                  onClick={() => onPageChange(page as number)}
                  className={`px-3 py-2 rounded-lg border text-sm font-medium transition-colors cursor-pointer ${
                    currentPage === page
                      ? 'bg-blue-600 text-white border-blue-600'
                      : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50 hover:border-gray-400'
                  }`}
                  aria-label={`Go to page ${page}`}
                  aria-current={currentPage === page ? 'page' : undefined}
                >
                  {page}
                </button>
              )}
            </React.Fragment>
          ))}
        </div>

        {/* Next button */}
        <button
          onClick={() => onPageChange(currentPage + 1)}
          disabled={currentPage === totalPages}
          className={`px-3 py-2 rounded-lg border text-sm font-medium transition-colors ${
            currentPage === totalPages
              ? 'bg-gray-100 text-gray-400 border-gray-200 cursor-not-allowed'
              : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50 hover:border-gray-400 cursor-pointer'
          }`}
          aria-label="Next page"
        >
          Next
        </button>
      </div>

      {/* Items per page selector */}
      <div className="flex items-center space-x-2 text-sm text-gray-600">
        <span>Items per page:</span>
        <select
          value={itemsPerPage}
          onChange={(e) => {
            // Reset to page 1 when changing items per page
            onPageChange(1);
            // The parent component should handle the itemsPerPage change
          }}
          className="px-2 py-1 border border-gray-300 rounded text-sm bg-white focus:outline-none focus:ring-2 focus:ring-blue-500"
        >
          <option value={8}>8</option>
          <option value={12}>12</option>
          <option value={16}>16</option>
          <option value={24}>24</option>
        </select>
      </div>
    </div>
  );
};

export default Pagination;
</file>

<file path="src/app/data/reviews.ts">
// src/app/data/reviews.ts
import { Review } from '../types';

export const reviews: Review[] = [
  // Reviews for Classical Mechanics (book-1)
  {
    id: 'review-1',
    bookId: '1',
    author: 'Dr. Yasmin Al-Baghdadi',
    rating: 5,
    title: 'Excellent foundation for physics students',
    comment: 'Dr. Al-Kindi has created a comprehensive introduction to classical mechanics. The mathematical derivations are clear and the problem sets are well-designed for understanding core principles.',
    timestamp: '2024-01-15T10:30:00Z',
    verified: true
  },
  {
    id: 'review-2',
    bookId: '1',
    author: 'Ahmad Khalil',
    rating: 4,
    title: 'Clear explanations of complex concepts',
    comment: 'The treatment of rotational dynamics and oscillations is particularly well done. Some sections could use more worked examples, but overall a solid textbook for undergraduate physics.',
    timestamp: '2024-02-03T14:22:00Z',
    verified: true
  },
  {
    id: 'review-3',
    bookId: '1',
    author: 'Prof. Layla Al-Masri',
    rating: 5,
    title: 'Perfect for engineering applications',
    comment: 'I use this textbook for my mechanics course. Students appreciate the real-world applications and the clear connection between theory and practice.',
    timestamp: '2024-02-20T09:15:00Z',
    verified: false
  },
  {
    id: 'review-4',
    bookId: '1',
    author: 'Omar Hassan',
    rating: 4,
    title: 'Good mathematical rigor',
    comment: 'The mathematical treatment is appropriate for upper-level undergraduates. The conservation laws chapter is particularly well-written.',
    timestamp: '2024-03-01T16:45:00Z',
    verified: true
  },
  {
    id: 'review-5',
    bookId: '1',
    author: 'Fatima Al-Zahra',
    rating: 5,
    title: 'Essential for physics majors',
    comment: 'Used this throughout my undergraduate studies. The progression from basic concepts to advanced topics is logical and well-paced.',
    timestamp: '2024-03-12T11:20:00Z',
    verified: true
  },

  // Reviews for Quantum Physics (book-2)
  {
    id: 'review-6',
    bookId: '2',
    author: 'Prof. Khalid Al-Razi',
    rating: 5,
    title: 'Outstanding quantum mechanics text',
    comment: 'Prof. Al-Haytham presents quantum mechanics with remarkable clarity. The treatment of wave functions and uncertainty principles is particularly insightful.',
    timestamp: '2024-01-08T13:30:00Z',
    verified: true
  },
  {
    id: 'review-7',
    bookId: '2',
    author: 'Zahra Mansour',
    rating: 4,
    title: 'Advanced but accessible',
    comment: 'Challenging material made accessible through excellent explanations. The applications to modern technology are fascinating and relevant.',
    timestamp: '2024-01-25T08:45:00Z',
    verified: true
  },
  {
    id: 'review-8',
    bookId: '2',
    author: 'Dr. Samir Al-Kindi',
    rating: 5,
    title: 'Comprehensive quantum theory',
    comment: 'This textbook covers everything from basic principles to advanced applications. The mathematical framework is presented with exceptional clarity.',
    timestamp: '2024-02-14T15:10:00Z',
    verified: false
  },
  {
    id: 'review-9',
    bookId: '2',
    author: 'Nadia Al-Sharif',
    rating: 4,
    title: 'Excellent for graduate students',
    comment: 'Dense material but well-organized. The quantum applications section provides valuable insight into current research directions.',
    timestamp: '2024-02-28T12:00:00Z',
    verified: true
  },
  {
    id: 'review-10',
    bookId: '2',
    author: 'Prof. Tariq Al-Dimashqi',
    rating: 5,
    title: 'Modern approach to quantum mechanics',
    comment: 'Bridges the gap between classical and quantum physics beautifully. Essential reading for anyone serious about quantum theory.',
    timestamp: '2024-03-05T17:30:00Z',
    verified: true
  },

  // Reviews for Stellar Astrophysics (book-3)
  {
    id: 'review-11',
    bookId: '3',
    author: 'Dr. Amina Al-Battani',
    rating: 5,
    title: 'Comprehensive stellar evolution coverage',
    comment: 'Dr. Al-Battani masterfully explains stellar formation, evolution, and death. The observational techniques section is particularly valuable.',
    timestamp: '2024-01-20T09:00:00Z',
    verified: true
  },
  {
    id: 'review-12',
    bookId: '3',
    author: 'Hassan Al-Shirazi',
    rating: 4,
    title: 'Great for astrophysics students',
    comment: 'Excellent treatment of galactic dynamics and cosmological structures. Some chapters are quite technical but rewarding for serious students.',
    timestamp: '2024-02-05T14:15:00Z',
    verified: true
  },
  {
    id: 'review-13',
    bookId: '3',
    author: 'Prof. Leila Al-Andalusi',
    rating: 4,
    title: 'Strong theoretical framework',
    comment: 'The theoretical foundations are solid and the connection to observational astronomy is well-made. Could use more recent discoveries.',
    timestamp: '2024-02-18T10:45:00Z',
    verified: false
  },
  {
    id: 'review-14',
    bookId: '3',
    author: 'Yusuf Al-Hakim',
    rating: 5,
    title: 'Excellent for research preparation',
    comment: 'This book prepared me well for graduate research in astrophysics. The mathematical treatment is rigorous yet accessible.',
    timestamp: '2024-03-02T16:20:00Z',
    verified: true
  },
  {
    id: 'review-15',
    bookId: '3',
    author: 'Dr. Mariam Al-Isfahani',
    rating: 4,
    title: 'Comprehensive galactic structure analysis',
    comment: 'Outstanding coverage of galactic dynamics. The stellar evolution chapters are particularly well-written and informative.',
    timestamp: '2024-03-15T13:30:00Z',
    verified: true
  },

  // Reviews for Planetary Sciences (book-4)
  {
    id: 'review-16',
    bookId: '4',
    author: 'Prof. Omar Al-Zarqali',
    rating: 5,
    title: 'Excellent planetary formation coverage',
    comment: 'Prof. Al-Zarqali provides comprehensive coverage of planetary formation and dynamics. The exoplanet section is particularly current and engaging.',
    timestamp: '2024-01-12T11:00:00Z',
    verified: true
  },
  {
    id: 'review-17',
    bookId: '4',
    author: 'Layla Al-Baghdadi',
    rating: 4,
    title: 'Great atmospheric dynamics section',
    comment: 'The atmospheric dynamics chapters are exceptional. Good balance between theoretical principles and observational data.',
    timestamp: '2024-01-28T15:45:00Z',
    verified: true
  },
  {
    id: 'review-18',
    bookId: '4',
    author: 'Dr. Khalil Al-Razi',
    rating: 5,
    title: 'Modern approach to planetary science',
    comment: 'Excellent integration of solar system and exoplanet studies. The comparative planetology approach is very effective.',
    timestamp: '2024-02-10T08:30:00Z',
    verified: false
  },
  {
    id: 'review-19',
    bookId: '4',
    author: 'Fatima Al-Kindi',
    rating: 4,
    title: 'Comprehensive but dense',
    comment: 'Covers a lot of ground in planetary sciences. Some sections are quite technical, but the content is thorough and up-to-date.',
    timestamp: '2024-02-25T12:15:00Z',
    verified: true
  },
  {
    id: 'review-20',
    bookId: '4',
    author: 'Prof. Ahmad Al-Mashriqiya',
    rating: 5,
    title: 'Essential for planetary studies',
    comment: 'This textbook is now a standard reference in our department. The treatment of both terrestrial and gas giant planets is excellent.',
    timestamp: '2024-03-08T14:00:00Z',
    verified: true
  },

  // Reviews for Islamic Architecture (book-5)
  {
    id: 'review-21',
    bookId: '5',
    author: 'Architect Zahra Al-Andalusi',
    rating: 5,
    title: 'Masterful analysis of Islamic geometry',
    comment: 'Al-Andalusi brilliantly explains the mathematical principles underlying Islamic architectural design. The geometric analysis is particularly insightful.',
    timestamp: '2024-01-05T10:20:00Z',
    verified: true
  },
  {
    id: 'review-22',
    bookId: '5',
    author: 'Prof. Hassan Al-Dimashqi',
    rating: 4,
    title: 'Excellent design principles',
    comment: 'Comprehensive coverage of Islamic architectural traditions. The contemporary applications section shows how classical principles remain relevant.',
    timestamp: '2024-01-22T16:30:00Z',
    verified: true
  },
  {
    id: 'review-23',
    bookId: '5',
    author: 'Leila Al-Muhandis',
    rating: 5,
    title: 'Essential for architecture students',
    comment: 'This book opened my eyes to the mathematical beauty of Islamic architecture. The geometric patterns are explained with remarkable clarity.',
    timestamp: '2024-02-07T09:45:00Z',
    verified: false
  },
  {
    id: 'review-24',
    bookId: '5',
    author: 'Dr. Yusuf Al-Baghdadi',
    rating: 4,
    title: 'Rich historical context',
    comment: 'Excellent historical context for understanding Islamic architectural development. The case studies of famous buildings are particularly valuable.',
    timestamp: '2024-02-21T13:10:00Z',
    verified: true
  },
  {
    id: 'review-25',
    bookId: '5',
    author: 'Mariam Al-Sharif',
    rating: 5,
    title: 'Beautiful integration of math and art',
    comment: 'Shows how mathematics and art come together in Islamic architecture. Essential reading for understanding cultural and technical aspects.',
    timestamp: '2024-03-10T11:25:00Z',
    verified: true
  },

  // Reviews for Sustainable Urban Planning (book-6)
  {
    id: 'review-26',
    bookId: '6',
    author: 'Dr. Tariq Al-Madani',
    rating: 5,
    title: 'Excellent green architecture principles',
    comment: 'Dr. Al-Dimashqi provides a comprehensive guide to sustainable urban development. The green building technologies section is particularly valuable.',
    timestamp: '2024-01-18T14:40:00Z',
    verified: true
  },
  {
    id: 'review-27',
    bookId: '6',
    author: 'Amina Al-Karkhi',
    rating: 4,
    title: 'Practical sustainability approaches',
    comment: 'Good balance between theoretical principles and practical applications. The case studies of sustainable cities are inspiring.',
    timestamp: '2024-02-01T10:15:00Z',
    verified: true
  },
  {
    id: 'review-28',
    bookId: '6',
    author: 'Prof. Khalid Al-Andalusi',
    rating: 4,
    title: 'Modern urban planning concepts',
    comment: 'Addresses current challenges in urban development with innovative solutions. The environmental impact assessment chapter is excellent.',
    timestamp: '2024-02-16T15:50:00Z',
    verified: false
  },
  {
    id: 'review-29',
    bookId: '6',
    author: 'Layla Al-Zahra',
    rating: 5,
    title: 'Essential for urban planners',
    comment: 'This book should be required reading for all urban planning students. The sustainable design principles are clearly explained and actionable.',
    timestamp: '2024-03-01T08:20:00Z',
    verified: true
  },
  {
    id: 'review-30',
    bookId: '6',
    author: 'Dr. Omar Al-Turani',
    rating: 4,
    title: 'Comprehensive green technology coverage',
    comment: 'Excellent coverage of green building technologies and sustainable infrastructure. The future cities section is particularly thought-provoking.',
    timestamp: '2024-03-14T12:35:00Z',
    verified: true
  },

  // Reviews for Advanced Calculus (book-7)
  {
    id: 'review-31',
    bookId: '7',
    author: 'Prof. Fatima Al-Jabir',
    rating: 5,
    title: 'Rigorous mathematical analysis',
    comment: 'Prof. Al-Jabir presents advanced calculus with exceptional rigor. The real analysis sections are particularly well-developed.',
    timestamp: '2024-01-10T13:25:00Z',
    verified: true
  },
  {
    id: 'review-32',
    bookId: '7',
    author: 'Ahmad Al-Khwarizmi',
    rating: 4,
    title: 'Excellent for engineering applications',
    comment: 'Strong mathematical foundation with good engineering applications. The multivariable calculus treatment is comprehensive.',
    timestamp: '2024-01-30T09:40:00Z',
    verified: true
  },
  {
    id: 'review-33',
    bookId: '7',
    author: 'Dr. Zahra Al-Razi',
    rating: 4,
    title: 'Challenging but rewarding',
    comment: 'Dense mathematical content but excellent pedagogical approach. The problem sets are challenging and well-designed.',
    timestamp: '2024-02-12T16:10:00Z',
    verified: false
  },
  {
    id: 'review-34',
    bookId: '7',
    author: 'Hassan Al-Biruni',
    rating: 5,
    title: 'Outstanding mathematical techniques',
    comment: 'The advanced mathematical techniques are presented clearly. Essential for physics and engineering students.',
    timestamp: '2024-02-26T11:55:00Z',
    verified: true
  },
  {
    id: 'review-35',
    bookId: '7',
    author: 'Prof. Nadia Al-Isfahani',
    rating: 4,
    title: 'Solid theoretical foundation',
    comment: 'Provides excellent theoretical foundation for advanced mathematics. The proof techniques are particularly well-explained.',
    timestamp: '2024-03-11T14:20:00Z',
    verified: true
  },

  // Reviews for Linear Algebra (book-8)
  {
    id: 'review-36',
    bookId: '8',
    author: 'Dr. Yusuf Al-Qurra',
    rating: 5,
    title: 'Excellent vector space treatment',
    comment: 'Dr. Al-Isfahani presents linear algebra concepts with remarkable clarity. The vector space and linear transformation chapters are outstanding.',
    timestamp: '2024-01-14T10:05:00Z',
    verified: true
  },
  {
    id: 'review-37',
    bookId: '8',
    author: 'Layla Al-Baghdadi',
    rating: 4,
    title: 'Great for computer science applications',
    comment: 'Strong emphasis on computational applications. The eigenvalue sections are particularly well-done for CS students.',
    timestamp: '2024-02-04T15:30:00Z',
    verified: true
  },
  {
    id: 'review-38',
    bookId: '8',
    author: 'Prof. Khalil Al-Shirazi',
    rating: 5,
    title: 'Perfect balance of theory and practice',
    comment: 'Excellent balance between theoretical rigor and practical applications. The matrix theory chapters are exceptionally clear.',
    timestamp: '2024-02-19T12:45:00Z',
    verified: false
  },
  {
    id: 'review-39',
    bookId: '8',
    author: 'Omar Al-Masri',
    rating: 4,
    title: 'Comprehensive linear algebra coverage',
    comment: 'Covers all essential topics in linear algebra. The engineering applications make abstract concepts more concrete.',
    timestamp: '2024-03-03T09:15:00Z',
    verified: true
  },
  {
    id: 'review-40',
    bookId: '8',
    author: 'Dr. Amina Al-Kindi',
    rating: 5,
    title: 'Essential for STEM students',
    comment: 'This textbook is now our standard reference for linear algebra. The progression from basic concepts to advanced topics is perfect.',
    timestamp: '2024-03-16T16:40:00Z',
    verified: true
  },

  // Reviews for Molecular Biology (book-9)
  {
    id: 'review-41',
    bookId: '9',
    author: 'Prof. Zahra Al-Zahrawi',
    rating: 5,
    title: 'Cutting-edge molecular biology',
    comment: 'Prof. Al-Razi presents modern molecular biology with exceptional depth. The genetic engineering sections are particularly current and relevant.',
    timestamp: '2024-01-12T11:15:00Z',
    verified: true
  },
  {
    id: 'review-42',
    bookId: '9',
    author: 'Dr. Hassan Al-Tabari',
    rating: 4,
    title: 'Excellent biotechnology applications',
    comment: 'Strong coverage of DNA technology and protein synthesis. The biotechnology applications are fascinating and well-explained.',
    timestamp: '2024-02-08T14:30:00Z',
    verified: true
  },
  {
    id: 'review-43',
    bookId: '9',
    author: 'Fatima Al-Razi',
    rating: 5,
    title: 'Comprehensive molecular techniques',
    comment: 'Outstanding coverage of modern molecular biology techniques. Essential for anyone working in biotechnology or medicine.',
    timestamp: '2024-02-22T09:20:00Z',
    verified: false
  },
  {
    id: 'review-44',
    bookId: '9',
    author: 'Dr. Ahmad Al-Biruni',
    rating: 4,
    title: 'Advanced but accessible',
    comment: 'Complex material presented in an accessible way. The medical applications sections are particularly valuable.',
    timestamp: '2024-03-05T16:45:00Z',
    verified: true
  },
  {
    id: 'review-45',
    bookId: '9',
    author: 'Prof. Leila Al-Kindi',
    rating: 5,
    title: 'Modern genetic engineering focus',
    comment: 'Excellent integration of classical molecular biology with modern genetic engineering. Perfect for graduate students.',
    timestamp: '2024-03-18T13:10:00Z',
    verified: true
  },

  // Reviews for Ecology (book-10)
  {
    id: 'review-46',
    bookId: '10',
    author: 'Dr. Yusuf Al-Jahiz',
    rating: 5,
    title: 'Comprehensive ecological principles',
    comment: 'Dr. Al-Baghdadi masterfully explains ecological principles and their applications. The conservation sections are particularly timely.',
    timestamp: '2024-01-25T10:40:00Z',
    verified: true
  },
  {
    id: 'review-47',
    bookId: '10',
    author: 'Amina Al-Mashriqiya',
    rating: 4,
    title: 'Excellent environmental focus',
    comment: 'Strong emphasis on environmental conservation and biodiversity. The population dynamics chapters are well-written.',
    timestamp: '2024-02-14T15:20:00Z',
    verified: true
  },
  {
    id: 'review-48',
    bookId: '10',
    author: 'Prof. Khalid Al-Andalusi',
    rating: 4,
    title: 'Good balance of theory and application',
    comment: 'Excellent balance between ecological theory and practical conservation applications. The case studies are particularly valuable.',
    timestamp: '2024-02-28T12:35:00Z',
    verified: false
  },
  {
    id: 'review-49',
    bookId: '10',
    author: 'Zahra Al-Dimashqi',
    rating: 5,
    title: 'Essential for environmental science',
    comment: 'This textbook covers all essential topics in ecology and environmental biology. Perfect for undergraduate environmental science courses.',
    timestamp: '2024-03-12T09:50:00Z',
    verified: true
  },
  {
    id: 'review-50',
    bookId: '10',
    author: 'Dr. Omar Al-Karkhi',
    rating: 4,
    title: 'Strong conservation emphasis',
    comment: 'Excellent coverage of conservation biology and environmental impact assessment. Current and relevant to today\'s environmental challenges.',
    timestamp: '2024-03-20T14:25:00Z',
    verified: true
  },

  // Additional reviews for remaining books (11-15) following the same pattern...
  // Reviews for Organic Chemistry (book-11)
  {
    id: 'review-51',
    bookId: '11',
    author: 'Prof. Nadia Al-Kindi',
    rating: 5,
    title: 'Outstanding reaction mechanisms',
    comment: 'Prof. Al-Dimashqi presents organic chemistry with exceptional clarity. The reaction mechanism sections are particularly well-explained.',
    timestamp: '2024-02-05T11:30:00Z',
    verified: true
  },
  {
    id: 'review-52',
    bookId: '11',
    author: 'Hassan Al-Shirazi',
    rating: 4,
    title: 'Excellent synthesis strategies',
    comment: 'Comprehensive coverage of synthesis strategies and spectroscopic analysis. Great resource for organic chemistry students.',
    timestamp: '2024-02-18T16:15:00Z',
    verified: true
  },

  // Reviews for Physical Chemistry (book-12)
  {
    id: 'review-53',
    bookId: '12',
    author: 'Dr. Ahmad Ibn Hayyan',
    rating: 5,
    title: 'Exceptional thermodynamics treatment',
    comment: 'Dr. Al-Turani provides excellent coverage of thermodynamics and kinetics. The quantum chemistry sections are particularly strong.',
    timestamp: '2024-01-30T14:20:00Z',
    verified: true
  },
  {
    id: 'review-54',
    bookId: '12',
    author: 'Fatima Al-Razi',
    rating: 4,
    title: 'Advanced physical chemistry concepts',
    comment: 'Rigorous treatment of physical chemistry principles. The statistical mechanics chapter is excellent.',
    timestamp: '2024-02-25T10:45:00Z',
    verified: true
  },

  // Reviews for Algorithms (book-13)
  {
    id: 'review-55',
    bookId: '13',
    author: 'Prof. Layla Al-Khwarizmi',
    rating: 5,
    title: 'Excellent algorithmic foundations',
    comment: 'Prof. Al-Jazari presents algorithms and data structures with remarkable clarity. Essential for computer science students.',
    timestamp: '2024-02-10T13:40:00Z',
    verified: true
  },
  {
    id: 'review-56',
    bookId: '13',
    author: 'Omar Al-Kindi',
    rating: 4,
    title: 'Comprehensive complexity analysis',
    comment: 'Outstanding coverage of algorithm complexity and computational problem-solving. The programming examples are well-chosen.',
    timestamp: '2024-03-01T15:30:00Z',
    verified: true
  },

  // Reviews for Engineering Thermodynamics (book-14)
  {
    id: 'review-57',
    bookId: '14',
    author: 'Dr. Zahra Al-Muhandis',
    rating: 5,
    title: 'Excellent engineering applications',
    comment: 'Dr. Al-Karkhi provides excellent coverage of thermodynamics with strong engineering focus. The heat transfer sections are particularly valuable.',
    timestamp: '2024-01-20T12:10:00Z',
    verified: true
  },
  {
    id: 'review-58',
    bookId: '14',
    author: 'Ahmad Al-Baghdadi',
    rating: 4,
    title: 'Comprehensive energy systems coverage',
    comment: 'Solid coverage of energy conversion systems and heat transfer mechanisms. Good balance of theory and practical applications.',
    timestamp: '2024-02-28T09:25:00Z',
    verified: true
  },

  // Reviews for Geophysics (book-15)
  {
    id: 'review-59',
    bookId: '15',
    author: 'Prof. Hassan Al-Biruni',
    rating: 5,
    title: 'Outstanding Earth science coverage',
    comment: 'Prof. Al-Mashriqiya provides comprehensive coverage of Earth\'s physical processes. The seismology sections are particularly excellent.',
    timestamp: '2024-02-15T14:50:00Z',
    verified: true
  },
  {
    id: 'review-60',
    bookId: '15',
    author: 'Dr. Amina Al-Andalusi',
    rating: 4,
    title: 'Excellent climate science integration',
    comment: 'Great integration of geophysics with climate science. The plate tectonics chapters are well-written and current.',
    timestamp: '2024-03-08T11:40:00Z',
    verified: true
  }
];
</file>

<file path="src/app/types/index.ts">
// src/app/types/index.ts

export interface Book {
  id: string;
  title: string;
  author: string;
  description: string;
  price: number;
  image: string;
  isbn: string;
  genre: string[];
  tags: string[];
  datePublished: string;
  pages: number;
  language: string;
  publisher: string;
  rating: number;
  reviewCount: number;
  inStock: boolean;
  featured: boolean;
}

export interface CartItem {
  id: string;
  bookId: string;
  quantity: number;
  addedAt: string;
}

export interface Review {
  id: string;
  bookId: string;
  author: string;
  rating: number;
  title: string;
  comment: string;
  timestamp: string;
  verified: boolean;
}
</file>

<file path="src/app/cart/page.tsx">
// src/app/cart/page.tsx
'use client';

import { useState, useEffect } from 'react';
import Link from 'next/link';
import CartItem from '../components/CartItem';
import { books } from '../data/books';
import { Book, CartItem as CartItemType } from '../types';

export default function CartPage() {
  const [cartItems, setCartItems] = useState<{ book: Book; quantity: number }[]>([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    // Load cart from localStorage
    const storedCart = localStorage.getItem('cart');
    if (storedCart) {
      try {
        const cart: CartItemType[] = JSON.parse(storedCart);
        const itemsWithBooks = cart
          .map(item => {
            const book = books.find(b => b.id === item.bookId);
            return book ? { book, quantity: item.quantity } : null;
          })
          .filter((item): item is { book: Book; quantity: number } => item !== null);
        
        setCartItems(itemsWithBooks);
      } catch (error) {
        console.error('Failed to parse cart from localStorage', error);
        setCartItems([]);
      }
    }
    setIsLoading(false);
  }, []);

  const updateQuantity = (bookId: string, newQuantity: number) => {
    if (newQuantity < 1) return;

    // Update local state
    const updatedItems = cartItems.map(item => 
      item.book.id === bookId ? { ...item, quantity: newQuantity } : item
    );
    setCartItems(updatedItems);

    // Update localStorage
    const cartForStorage = updatedItems.map(item => ({
      id: `${item.book.id}-${Date.now()}`,
      bookId: item.book.id,
      quantity: item.quantity,
      addedAt: new Date().toISOString()
    }));
    localStorage.setItem('cart', JSON.stringify(cartForStorage));
    
    // Notify navbar
    window.dispatchEvent(new CustomEvent('cartUpdated'));
  };

  const removeItem = (bookId: string) => {
    // Update local state
    const updatedItems = cartItems.filter(item => item.book.id !== bookId);
    setCartItems(updatedItems);

    // Update localStorage
    const cartForStorage = updatedItems.map(item => ({
      id: `${item.book.id}-${Date.now()}`,
      bookId: item.book.id,
      quantity: item.quantity,
      addedAt: new Date().toISOString()
    }));
    localStorage.setItem('cart', JSON.stringify(cartForStorage));
    
    // Notify navbar
    window.dispatchEvent(new CustomEvent('cartUpdated'));
  };

  const clearCart = () => {
    setCartItems([]);
    localStorage.removeItem('cart');
    window.dispatchEvent(new CustomEvent('cartUpdated'));
  };

  const totalPrice = cartItems.reduce((total, item) => total + (item.book.price * item.quantity), 0);

  if (isLoading) {
    return <div className="text-center py-10">Loading...</div>;
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold text-gray-800 mb-8">Shopping Cart</h1>
      
      {cartItems.length === 0 ? (
        <div className="text-center py-12 bg-white rounded-lg shadow-md">
          <h2 className="text-xl text-gray-600 mb-4">Your cart is empty</h2>
          <Link href="/" className="bg-blue-500 text-white px-6 py-3 rounded-md hover:bg-blue-600 transition-colors cursor-pointer">
            Continue Shopping
          </Link>
        </div>
      ) : (
        <>
          <div className="bg-white rounded-lg shadow-md">
            {cartItems.map((item) => (
              <CartItem
                key={item.book.id}
                item={item}
                onUpdateQuantity={updateQuantity}
                onRemoveItem={removeItem}
              />
            ))}
          </div>
          
          <div className="mt-8 bg-white rounded-lg shadow-md p-6">
            <div className="flex justify-between items-center text-xl font-bold mb-4 text-gray-800">
              <span>Total: ${totalPrice.toFixed(2)}</span>
            </div>
            
            <div className="flex flex-col sm:flex-row gap-4">
              <Link href="/" className="flex-1 bg-gray-500 text-white text-center py-3 rounded-md hover:bg-gray-600 transition-colors cursor-pointer">
                Continue Shopping
              </Link>
              <button 
                onClick={clearCart}
                className="flex-1 bg-red-500 text-white py-3 rounded-md hover:bg-red-600 transition-colors cursor-pointer"
              >
                Clear Cart
              </button>
            </div>
          </div>
        </>
      )}
    </div>
  );
}
</file>

<file path="src/app/components/BookCard.tsx">
// src/app/components/BookCard.tsx
'use client';

import React, { useState } from 'react';
import Link from 'next/link';
import { Book } from '../types';

interface BookCardProps {
  book: Book;
  onAddToCart?: (bookId: string) => void;
}

const BookCard: React.FC<BookCardProps> = ({ book, onAddToCart }) => {
  const [isAddingToCart, setIsAddingToCart] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);

  // Function to render star ratings
  const renderStars = (rating: number) => {
    const stars = [];
    const fullStars = Math.floor(rating);
    const hasHalfStar = rating % 1 >= 0.5;
    
    for (let i = 1; i <= 5; i++) {
      if (i <= fullStars) {
        // Full star
        stars.push(
          <svg key={i} className="w-4 h-4 text-yellow-400 fill-current" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
        );
      } else if (i === fullStars + 1 && hasHalfStar) {
        // Half star
        stars.push(
          <div key={i} className="relative w-4 h-4">
            <svg className="w-4 h-4 text-gray-300 fill-current absolute" viewBox="0 0 20 20">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
            </svg>
            <div className="absolute inset-0 overflow-hidden w-1/2">
              <svg className="w-4 h-4 text-yellow-400 fill-current" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
              </svg>
            </div>
          </div>
        );
      } else {
        // Empty star
        stars.push(
          <svg key={i} className="w-4 h-4 text-gray-300 fill-current" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
        );
      }
    }
    return <div className="flex items-center">{stars}</div>;
  };

  // Handle add to cart
  const handleAddToCart = async (e: React.MouseEvent) => {
    e.preventDefault(); // Prevent navigation when clicking the button
    e.stopPropagation();
    
    if (!book.inStock || isAddingToCart) return;
    
    setIsAddingToCart(true);
    
    try {
      // Simulate API call delay
      await new Promise(resolve => setTimeout(resolve, 500));
      
      if (onAddToCart) {
        onAddToCart(book.id);
      }
      
      // Show success feedback
      setShowSuccess(true);
      setTimeout(() => setShowSuccess(false), 2000);
    } catch (error) {
      console.error('Error adding to cart:', error);
    } finally {
      setIsAddingToCart(false);
    }
  };

  return (
    <div className="bg-white rounded-lg shadow-md overflow-hidden transform hover:-translate-y-1 transition-transform duration-300">
      {/* Book Cover - Clickable */}
      <Link href={`/book/${book.id}`} className="block cursor-pointer">
        <div className="relative h-64 w-full bg-gray-200 flex items-center justify-center hover:bg-gray-300 transition-colors duration-200">
          {/* Book Icon Placeholder */}
          <div className="text-6xl text-gray-400">📚</div>
        </div>
      </Link>
      
      {/* Book Information */}
      <div className="p-4">
        <Link href={`/book/${book.id}`} className="block cursor-pointer">
          <h3 className="text-lg font-semibold text-gray-800 truncate hover:text-blue-600 transition-colors duration-200">{book.title}</h3>
          <p className="text-sm text-gray-600 mt-1">by {book.author}</p>
        </Link>
        
        <div className="flex items-center mt-2">
          {renderStars(book.rating)}
          <span className="text-xs text-gray-500 ml-2">({book.reviewCount} reviews)</span>
        </div>
        
        <div className="mt-2">
          {book.genre.slice(0, 2).map((g) => (
            <span key={g} className="inline-block bg-gray-200 rounded-full px-2 py-1 text-xs font-semibold text-gray-700 mr-2 mb-2">
              {g}
            </span>
          ))}
          {book.genre.length > 2 && (
            <span className="text-xs text-gray-500">+{book.genre.length - 2} more</span>
          )}
        </div>
        
        <div className="flex items-center justify-between mt-3">
          <p className="text-xl font-bold text-gray-900">${book.price.toFixed(2)}</p>
          {!book.inStock && (
            <span className="text-xs text-red-600 font-medium">Out of Stock</span>
          )}
        </div>
        
        {/* Action Buttons */}
        <div className="flex gap-2 mt-4">
          <Link href={`/book/${book.id}`} className="flex-1 cursor-pointer">
            <button className="w-full px-3 py-2 text-sm border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors duration-200 cursor-pointer">
              View Details
            </button>
          </Link>
          
          <button
            onClick={handleAddToCart}
            disabled={!book.inStock || isAddingToCart}
            className={`flex-1 px-3 py-2 text-sm rounded-md transition-colors duration-200 ${
              !book.inStock
                ? 'bg-gray-100 text-gray-400 cursor-not-allowed'
                : showSuccess
                ? 'bg-green-600 text-white cursor-pointer'
                : isAddingToCart
                ? 'bg-blue-400 text-white cursor-wait'
                : 'bg-blue-600 text-white hover:bg-blue-700 cursor-pointer'
            }`}
          >
            {showSuccess ? (
              <span className="flex items-center justify-center gap-1">
                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                Added!
              </span>
            ) : isAddingToCart ? (
              <span className="flex items-center justify-center gap-1">
                <svg className="animate-spin w-4 h-4" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Adding...
              </span>
            ) : (
              'Add to Cart'
            )}
          </button>
        </div>
      </div>
    </div>
  );
};

export default BookCard;
</file>

<file path="src/app/components/BookGrid.tsx">
// src/app/components/BookGrid.tsx
'use client';

import React, { useState, useMemo } from 'react';
import { Book } from '../types';
import BookCard from './BookCard';
import BookListItem from './BookListItem';
import Pagination from './Pagination';

interface BookGridProps {
  books: Book[];
  onAddToCart?: (bookId: string) => void;
}

const BookGrid: React.FC<BookGridProps> = ({ books, onAddToCart }) => {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedGenre, setSelectedGenre] = useState('All');
  const [sortBy, setSortBy] = useState('title');
  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');
  const [currentPage, setCurrentPage] = useState(1);
  const [itemsPerPage, setItemsPerPage] = useState(8);
  const [featuredCarouselIndex, setFeaturedCarouselIndex] = useState(0);

  // Memoize featured books to prevent re-calculation on every render
  const featuredBooks = useMemo(() => books.filter(book => book.featured), [books]);

  // Carousel settings for featured books
  const booksPerPage = 4;
  const totalFeaturedPages = Math.ceil(featuredBooks.length / booksPerPage);
  
  // Get current featured books to display
  const currentFeaturedBooks = useMemo(() => {
    const startIndex = featuredCarouselIndex * booksPerPage;
    const endIndex = startIndex + booksPerPage;
    return featuredBooks.slice(startIndex, endIndex);
  }, [featuredBooks, featuredCarouselIndex]);

  // Carousel navigation functions
  const goToPreviousFeatured = () => {
    setFeaturedCarouselIndex(prev => 
      prev === 0 ? totalFeaturedPages - 1 : prev - 1
    );
  };

  const goToNextFeatured = () => {
    setFeaturedCarouselIndex(prev => 
      prev === totalFeaturedPages - 1 ? 0 : prev + 1
    );
  };

  const goToFeaturedPage = (pageIndex: number) => {
    setFeaturedCarouselIndex(pageIndex);
  };

  // Get all unique genres for the filter dropdown
  const genres = useMemo(() => {
    const allGenres = books.flatMap(book => book.genre);
    return ['All', ...new Set(allGenres)];
  }, [books]);

  // Filter and sort books based on search query, selected genre, and sorting options
  const filteredAndSortedBooks = useMemo(() => {
    // First filter the books
    const filtered = books.filter(book => {
      const matchesSearch = 
        book.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
        book.author.toLowerCase().includes(searchQuery.toLowerCase());
      
      const matchesGenre = 
        selectedGenre === 'All' || book.genre.includes(selectedGenre);

      return matchesSearch && matchesGenre;
    });

    // Then sort the filtered books
    const sorted = [...filtered].sort((a, b) => {
      let comparison = 0;

      switch (sortBy) {
        case 'title':
          comparison = a.title.localeCompare(b.title);
          break;
        case 'author':
          comparison = a.author.localeCompare(b.author);
          break;
        case 'datePublished':
          comparison = new Date(a.datePublished).getTime() - new Date(b.datePublished).getTime();
          break;
        case 'rating':
          comparison = a.rating - b.rating;
          break;
        case 'reviewCount':
          comparison = a.reviewCount - b.reviewCount;
          break;
        case 'price':
          comparison = a.price - b.price;
          break;
        default:
          comparison = 0;
      }

      return sortOrder === 'asc' ? comparison : -comparison;
    });

    return sorted;
  }, [books, searchQuery, selectedGenre, sortBy, sortOrder]);

  // Paginate the filtered and sorted books
  const paginatedBooks = useMemo(() => {
    const startIndex = (currentPage - 1) * itemsPerPage;
    const endIndex = startIndex + itemsPerPage;
    return filteredAndSortedBooks.slice(startIndex, endIndex);
  }, [filteredAndSortedBooks, currentPage, itemsPerPage]);

  const totalPages = Math.ceil(filteredAndSortedBooks.length / itemsPerPage);

  // Reset to first page when filters or sorting change
  React.useEffect(() => {
    setCurrentPage(1);
  }, [searchQuery, selectedGenre, sortBy, sortOrder, itemsPerPage]);

  // Handle page change
  const handlePageChange = (page: number) => {
    setCurrentPage(page);
  };

  // Handle items per page change
  const handleItemsPerPageChange = (newItemsPerPage: number) => {
    setItemsPerPage(newItemsPerPage);
    setCurrentPage(1);
  };

  return (
    <div className="container mx-auto px-4 py-8">
      {/* Featured Books Section */}
      <section className="mb-12">
        <div className="flex items-center justify-between mb-6">
          <h2 className="text-3xl font-bold text-gray-800">Featured Books</h2>
          {totalFeaturedPages > 1 && (
            <div className="flex items-center gap-4">
              {/* Carousel Indicators */}
              <div className="flex gap-2">
                {Array.from({ length: totalFeaturedPages }, (_, index) => (
                  <button
                    key={index}
                    onClick={() => goToFeaturedPage(index)}
                    className={`w-2 h-2 rounded-full transition-colors duration-200 cursor-pointer ${
                      index === featuredCarouselIndex 
                        ? 'bg-blue-600' 
                        : 'bg-gray-300 hover:bg-gray-400'
                    }`}
                    aria-label={`Go to featured books page ${index + 1}`}
                  />
                ))}
              </div>
              
              {/* Navigation Buttons */}
              <div className="flex gap-2">
                <button
                  onClick={goToPreviousFeatured}
                  className="p-2 rounded-full bg-white border border-gray-300 hover:bg-gray-50 transition-colors duration-200 cursor-pointer"
                  aria-label="Previous featured books"
                >
                  <svg className="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                  </svg>
                </button>
                <button
                  onClick={goToNextFeatured}
                  className="p-2 rounded-full bg-white border border-gray-300 hover:bg-gray-50 transition-colors duration-200 cursor-pointer"
                  aria-label="Next featured books"
                >
                  <svg className="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                  </svg>
                </button>
              </div>
            </div>
          )}
        </div>
        
        {/* Featured Books Carousel */}
        <div className="relative">
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
            {currentFeaturedBooks.map(book => (
              <BookCard key={book.id} book={book} onAddToCart={onAddToCart} />
            ))}
          </div>
          
          {/* Show current page info */}
          {totalFeaturedPages > 1 && (
            <div className="text-center mt-4 text-sm text-gray-600">
              Showing {featuredCarouselIndex * booksPerPage + 1} - {Math.min((featuredCarouselIndex + 1) * booksPerPage, featuredBooks.length)} of {featuredBooks.length} featured books
            </div>
          )}
        </div>
      </section>

      {/* Search, Filter, and Sort Controls */}
      <section className="mb-8 space-y-4">
        {/* Search and Genre Filter Row */}
        <div className="flex flex-col md:flex-row justify-between items-center gap-4">
          <div className="w-full md:w-1/2">
            <input
              type="text"
              placeholder="Search by title or author..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>
          <div className="w-full md:w-1/4">
            <label htmlFor="genreFilter" className="block text-sm font-medium text-gray-700 mb-2">
              Filter by Genre:
            </label>
            <select
              id="genreFilter"
              value={selectedGenre}
              onChange={(e) => setSelectedGenre(e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white"
            >
              {genres.map(genre => (
                <option key={genre} value={genre}>{genre}</option>
              ))}
            </select>
          </div>
        </div>

        {/* Sorting Controls Row */}
        <div className="flex flex-col sm:flex-row justify-between items-center gap-4">
          <div className="flex items-center gap-2 text-sm text-gray-600">
            <span>Showing {filteredAndSortedBooks.length} books</span>
          </div>
          <div className="flex items-center gap-4">
            {/* Sort By Dropdown */}
            <div className="flex items-center gap-2">
              <label htmlFor="sortBy" className="text-sm text-gray-600 whitespace-nowrap">
                Sort by:
              </label>
              <select
                id="sortBy"
                value={sortBy}
                onChange={(e) => setSortBy(e.target.value)}
                className="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white text-sm"
              >
                <option value="title">Title</option>
                <option value="author">Author</option>
                <option value="datePublished">Release Date</option>
                <option value="rating">Rating</option>
                <option value="reviewCount">Review Count</option>
                <option value="price">Price</option>
              </select>
            </div>

            {/* Sort Order Toggle */}
            <button
              onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}
              className="flex items-center gap-1 px-3 py-2 border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm cursor-pointer"
              aria-label={`Sort ${sortOrder === 'asc' ? 'descending' : 'ascending'}`}
            >
              {sortOrder === 'asc' ? (
                <>
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 15l7-7 7 7" />
                  </svg>
                  <span>Asc</span>
                </>
              ) : (
                <>
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                  </svg>
                  <span>Desc</span>
                </>
              )}
            </button>
          </div>
        </div>
      </section>

      {/* All Books List */}
      <section>
        <h2 className="text-3xl font-bold text-gray-800 mb-6">All Books</h2>
        {filteredAndSortedBooks.length > 0 ? (
          <>
            <div className="space-y-3">
              {paginatedBooks.map(book => (
                <BookListItem key={book.id} book={book} onAddToCart={onAddToCart} />
              ))}
            </div>
            
            {/* Pagination */}
            <Pagination
              currentPage={currentPage}
              totalPages={totalPages}
              onPageChange={handlePageChange}
              itemsPerPage={itemsPerPage}
              totalItems={filteredAndSortedBooks.length}
            />
          </>
        ) : (
          <p className="text-center text-gray-500 text-lg">No books found matching your criteria.</p>
        )}
      </section>
    </div>
  );
};

export default BookGrid;
</file>

<file path="src/app/data/books.ts">
// src/app/data/books.ts
import { Book } from '../types';

export const books: Book[] = [
  // Physics Textbooks
  {
    id: '1',
    title: 'Fundamentals of Classical Mechanics',
    author: 'Dr. Ahmad Al-Kindi',
    description: 'A comprehensive introduction to classical mechanics covering Newtonian dynamics, conservation laws, rotational motion, and oscillations with modern applications.',
    price: 89.99,
    image: '/images/book1.jpg',
    isbn: '978-0123456789',
    genre: ['Physics', 'Textbook'],
    tags: ['Mechanics', 'Physics', 'University'],
    datePublished: '2022-01-15',
    pages: 654,
    language: 'English',
    publisher: 'Al-Biruni Academic Press',
    rating: 4.8,
    reviewCount: 23,
    inStock: true,
    featured: true,
  },
  {
    id: '2',
    title: 'Quantum Physics: Principles and Applications',
    author: 'Prof. Fatima Al-Haytham',
    description: 'An advanced textbook exploring quantum mechanics, wave functions, uncertainty principles, and quantum applications in modern technology.',
    price: 125.50,
    image: '/images/book2.jpg',
    isbn: '978-0234567890',
    genre: ['Physics', 'Quantum Mechanics'],
    tags: ['Quantum', 'Advanced Physics', 'Modern Physics'],
    datePublished: '2023-03-10',
    pages: 782,
    language: 'English',
    publisher: 'Ibn Sina Publications',
    rating: 4.9,
    reviewCount: 18,
    inStock: true,
    featured: true,
  },
  // Astronomy Textbooks
  {
    id: '3',
    title: 'Stellar Astrophysics and Galactic Structure',
    author: 'Dr. Omar Al-Battani',
    description: 'Explores stellar evolution, galactic dynamics, and cosmological structures with emphasis on observational techniques and theoretical frameworks.',
    price: 98.75,
    image: '/images/book3.jpg',
    isbn: '978-0345678901',
    genre: ['Astronomy', 'Astrophysics'],
    tags: ['Stars', 'Galaxies', 'Cosmology'],
    datePublished: '2022-09-20',
    pages: 567,
    language: 'English',
    publisher: 'Al-Sufi Astronomical Society',
    rating: 4.7,
    reviewCount: 12,
    inStock: false,
    featured: false,
  },
  {
    id: '4',
    title: 'Planetary Sciences and Solar System Dynamics',
    author: 'Prof. Zahra Al-Zarqali',
    description: 'Comprehensive study of planetary formation, atmospheric dynamics, and comparative planetology across our solar system and exoplanets.',
    price: 112.30,
    image: '/images/book4.jpg',
    isbn: '978-0456789012',
    genre: ['Astronomy', 'Planetary Science'],
    tags: ['Planets', 'Solar System', 'Exoplanets'],
    datePublished: '2023-05-12',
    pages: 689,
    language: 'English',
    publisher: 'Al-Kindi Scientific Press',
    rating: 4.8,
    reviewCount: 9,
    inStock: true,
    featured: true,
  },
  // Architecture Textbooks
  {
    id: '5',
    title: 'Islamic Architecture: Geometry and Design Principles',
    author: 'Architect Yusuf Al-Andalusi',
    description: 'Explores the mathematical foundations and geometric principles underlying Islamic architectural traditions, from classical to contemporary applications.',
    price: 79.99,
    image: '/images/book5.jpg',
    isbn: '978-0567890123',
    genre: ['Architecture', 'Islamic Studies'],
    tags: ['Islamic Architecture', 'Geometry', 'Design'],
    datePublished: '2022-11-08',
    pages: 445,
    language: 'English',
    publisher: 'Al-Muhandis Publications',
    rating: 4.9,
    reviewCount: 15,
    inStock: true,
    featured: false,
  },
  {
    id: '6',
    title: 'Sustainable Urban Planning and Green Architecture',
    author: 'Dr. Layla Al-Dimashqi',
    description: 'Modern approaches to sustainable urban development, green building technologies, and environmentally conscious architectural design.',
    price: 95.60,
    image: '/images/book6.jpg',
    isbn: '978-0678901234',
    genre: ['Architecture', 'Urban Planning'],
    tags: ['Sustainability', 'Urban Planning', 'Green Design'],
    datePublished: '2023-02-28',
    pages: 523,
    language: 'English',
    publisher: 'Al-Madina Urban Studies',
    rating: 4.6,
    reviewCount: 2,
    inStock: true,
    featured: false,
  },
  // Mathematics Textbooks
  {
    id: '7',
    title: 'Advanced Calculus and Mathematical Analysis',
    author: 'Prof. Hassan Al-Jabir',
    description: 'Rigorous treatment of real analysis, multivariable calculus, and advanced mathematical techniques for engineering and physics applications.',
    price: 87.45,
    image: '/images/book1.jpg',
    isbn: '978-0789012345',
    genre: ['Mathematics', 'Calculus'],
    tags: ['Calculus', 'Analysis', 'Advanced Mathematics'],
    datePublished: '2023-01-20',
    pages: 612,
    language: 'English',
    publisher: 'Al-Khwarizmi Mathematical Society',
    rating: 4.7,
    reviewCount: 21,
    inStock: true,
    featured: false,
  },
  {
    id: '8',
    title: 'Linear Algebra and Matrix Theory',
    author: 'Dr. Mariam Al-Isfahani',
    description: 'Comprehensive introduction to vector spaces, linear transformations, eigenvalues, and applications in engineering and computer science.',
    price: 76.20,
    image: '/images/book2.jpg',
    isbn: '978-0890123456',
    genre: ['Mathematics', 'Linear Algebra'],
    tags: ['Linear Algebra', 'Matrices', 'Vector Spaces'],
    datePublished: '2022-08-15',
    pages: 489,
    language: 'English',
    publisher: 'Ibn Qurra Academic Press',
    rating: 4.8,
    reviewCount: 16,
    inStock: true,
    featured: true,
  },
  // Biology Textbooks
  {
    id: '9',
    title: 'Molecular Biology and Genetic Engineering',
    author: 'Prof. Samir Al-Razi',
    description: 'Modern molecular biology techniques, DNA technology, protein synthesis, and applications in biotechnology and medicine.',
    price: 118.90,
    image: '/images/book3.jpg',
    isbn: '978-0901234567',
    genre: ['Biology', 'Molecular Biology'],
    tags: ['Molecular Biology', 'Genetics', 'Biotechnology'],
    datePublished: '2023-04-05',
    pages: 734,
    language: 'English',
    publisher: 'Al-Zahrawi Medical Sciences',
    rating: 4.9,
    reviewCount: 14,
    inStock: true,
    featured: true,
  },
  {
    id: '10',
    title: 'Ecology and Environmental Biology',
    author: 'Dr. Amina Al-Baghdadi',
    description: 'Comprehensive study of ecological principles, population dynamics, biodiversity conservation, and environmental impact assessment.',
    price: 92.75,
    image: '/images/book4.jpg',
    isbn: '978-1012345678',
    genre: ['Biology', 'Ecology'],
    tags: ['Ecology', 'Environment', 'Conservation'],
    datePublished: '2022-12-10',
    pages: 578,
    language: 'English',
    publisher: 'Al-Jahiz Environmental Studies',
    rating: 4.6,
    reviewCount: 10,
    inStock: true,
    featured: false,
  },
  // Chemistry Textbooks
  {
    id: '11',
    title: 'Organic Chemistry: Structure and Reactivity',
    author: 'Prof. Khalil Al-Dimashqi',
    description: 'Systematic approach to organic chemistry covering reaction mechanisms, synthesis strategies, and spectroscopic analysis techniques.',
    price: 104.30,
    image: '/images/book5.jpg',
    isbn: '978-1123456789',
    genre: ['Chemistry', 'Organic Chemistry'],
    tags: ['Organic Chemistry', 'Synthesis', 'Mechanisms'],
    datePublished: '2023-06-18',
    pages: 689,
    language: 'English',
    publisher: 'Al-Kindi Chemical Sciences',
    rating: 4.8,
    reviewCount: 17,
    inStock: true,
    featured: true,
  },
  {
    id: '12',
    title: 'Physical Chemistry: Thermodynamics and Kinetics',
    author: 'Dr. Nadia Al-Turani',
    description: 'Advanced physical chemistry covering thermodynamic principles, chemical kinetics, quantum chemistry, and statistical mechanics.',
    price: 97.85,
    image: '/images/book6.jpg',
    isbn: '978-1234567890',
    genre: ['Chemistry', 'Physical Chemistry'],
    tags: ['Physical Chemistry', 'Thermodynamics', 'Kinetics'],
    datePublished: '2022-10-25',
    pages: 623,
    language: 'English',
    publisher: 'Ibn Hayyan Publications',
    rating: 4.7,
    reviewCount: 13,
    inStock: false,
    featured: false,
  },
  // Computer Science
  {
    id: '13',
    title: 'Algorithms and Data Structures',
    author: 'Prof. Tariq Al-Jazari',
    description: 'Comprehensive guide to fundamental algorithms, data structures, complexity analysis, and computational problem-solving techniques.',
    price: 85.60,
    image: '/images/book1.jpg',
    isbn: '978-1345678901',
    genre: ['Computer Science', 'Algorithms'],
    tags: ['Algorithms', 'Data Structures', 'Programming'],
    datePublished: '2023-03-30',
    pages: 567,
    language: 'English',
    publisher: 'Al-Khawarizmi Computing',
    rating: 4.9,
    reviewCount: 22,
    inStock: true,
    featured: true,
  },
  // Engineering
  {
    id: '14',
    title: 'Engineering Thermodynamics and Heat Transfer',
    author: 'Dr. Rashid Al-Karkhi',
    description: 'Fundamental principles of thermodynamics, heat transfer mechanisms, and energy conversion systems in engineering applications.',
    price: 108.45,
    image: '/images/book2.jpg',
    isbn: '978-1456789012',
    genre: ['Engineering', 'Thermodynamics'],
    tags: ['Thermodynamics', 'Heat Transfer', 'Energy'],
    datePublished: '2022-07-12',
    pages: 645,
    language: 'English',
    publisher: 'Al-Muhandis Technical Press',
    rating: 4.7,
    reviewCount: 15,
    inStock: true,
    featured: false,
  },
  // Earth Sciences
  {
    id: '15',
    title: 'Geophysics and Earth System Sciences',
    author: 'Prof. Leila Al-Mashriqiya',
    description: 'Comprehensive study of Earth\'s physical processes, seismology, plate tectonics, and climate systems with modern research applications.',
    price: 115.20,
    image: '/images/book3.jpg',
    isbn: '978-1567890123',
    genre: ['Earth Sciences', 'Geophysics'],
    tags: ['Geophysics', 'Seismology', 'Climate'],
    datePublished: '2023-08-14',
    pages: 712,
    language: 'English',
    publisher: 'Al-Biruni Earth Sciences',
    rating: 4.8,
    reviewCount: 9,
    inStock: true,
    featured: true,
  },
  // Additional Physics Books
  {
    id: '16',
    title: 'Statistical Mechanics and Thermodynamics',
    author: 'Dr. Amjad Al-Baghdadi',
    description: 'Advanced treatment of statistical mechanics, entropy, phase transitions, and their applications in modern physics and engineering.',
    price: 102.45,
    image: '/images/book4.jpg',
    isbn: '978-1678901234',
    genre: ['Physics', 'Statistical Mechanics'],
    tags: ['Statistical Mechanics', 'Entropy', 'Phase Transitions'],
    datePublished: '2022-04-20',
    pages: 598,
    language: 'English',
    publisher: 'Al-Farabi Physics Press',
    rating: 3.8,
    reviewCount: 18,
    inStock: true,
    featured: false,
  },
  {
    id: '17',
    title: 'Electromagnetic Fields and Waves',
    author: 'Prof. Salma Al-Razi',
    description: 'Comprehensive study of electromagnetic theory, Maxwell\'s equations, wave propagation, and applications in modern technology.',
    price: 94.30,
    image: '/images/book5.jpg',
    isbn: '978-1789012345',
    genre: ['Physics', 'Electromagnetic Theory'],
    tags: ['Electromagnetism', 'Maxwell Equations', 'Wave Theory'],
    datePublished: '2023-01-18',
    pages: 634,
    language: 'English',
    publisher: 'Ibn Sina Scientific',
    rating: 4.5,
    reviewCount: 21,
    inStock: false,
    featured: true,
  },
  // Additional Mathematics Books
  {
    id: '18',
    title: 'Differential Equations and Dynamical Systems',
    author: 'Dr. Yusuf Al-Khwarizmi',
    description: 'Modern approach to differential equations, stability theory, chaos, and applications to biological and physical systems.',
    price: 88.75,
    image: '/images/book6.jpg',
    isbn: '978-1890123456',
    genre: ['Mathematics', 'Differential Equations'],
    tags: ['Differential Equations', 'Dynamical Systems', 'Chaos Theory'],
    datePublished: '2022-11-15',
    pages: 567,
    language: 'English',
    publisher: 'Al-Kindi Mathematical Institute',
    rating: 4.2,
    reviewCount: 16,
    inStock: true,
    featured: false,
  },
  {
    id: '19',
    title: 'Number Theory and Cryptography',
    author: 'Prof. Zahra Al-Tabari',
    description: 'Introduction to number theory with applications to modern cryptography, including RSA, elliptic curves, and quantum cryptography.',
    price: 96.60,
    image: '/images/book1.jpg',
    isbn: '978-1901234567',
    genre: ['Mathematics', 'Number Theory'],
    tags: ['Number Theory', 'Cryptography', 'Security'],
    datePublished: '2023-06-22',
    pages: 512,
    language: 'English',
    publisher: 'Al-Jabir Cryptographic Press',
    rating: 4.7,
    reviewCount: 9,
    inStock: true,
    featured: true,
  },
  {
    id: '20',
    title: 'Topology and Algebraic Geometry',
    author: 'Dr. Hassan Al-Andalusi',
    description: 'Advanced mathematics covering topological spaces, manifolds, and algebraic geometric structures with modern applications.',
    price: 124.90,
    image: '/images/book2.jpg',
    isbn: '978-2012345678',
    genre: ['Mathematics', 'Topology'],
    tags: ['Topology', 'Algebraic Geometry', 'Manifolds'],
    datePublished: '2023-03-08',
    pages: 789,
    language: 'English',
    publisher: 'Al-Biruni Advanced Mathematics',
    rating: 3.6,
    reviewCount: 3,
    inStock: true,
    featured: false,
  },
  // Additional Biology Books
  {
    id: '21',
    title: 'Neuroscience and Brain Function',
    author: 'Prof. Layla Al-Zahrawi',
    description: 'Comprehensive study of neuroscience, brain anatomy, neural networks, and cognitive functions with modern research findings.',
    price: 134.50,
    image: '/images/book3.jpg',
    isbn: '978-2123456789',
    genre: ['Biology', 'Neuroscience'],
    tags: ['Neuroscience', 'Brain', 'Cognition'],
    datePublished: '2023-09-12',
    pages: 856,
    language: 'English',
    publisher: 'Al-Razi Medical Sciences',
    rating: 4.8,
    reviewCount: 23,
    inStock: true,
    featured: true,
  },
  {
    id: '22',
    title: 'Microbiology and Infectious Diseases',
    author: 'Dr. Omar Al-Kindi',
    description: 'Modern microbiology covering bacterial, viral, and fungal pathogens, immune responses, and antimicrobial strategies.',
    price: 118.25,
    image: '/images/book4.jpg',
    isbn: '978-2234567890',
    genre: ['Biology', 'Microbiology'],
    tags: ['Microbiology', 'Pathogens', 'Immunity'],
    datePublished: '2022-07-30',
    pages: 692,
    language: 'English',
    publisher: 'Ibn Sina Medical Press',
    rating: 4.3,
    reviewCount: 15,
    inStock: true,
    featured: false,
  },
  {
    id: '23',
    title: 'Plant Biology and Botany',
    author: 'Prof. Fatima Al-Dimashqi',
    description: 'Comprehensive botany textbook covering plant anatomy, physiology, genetics, and ecological interactions.',
    price: 105.80,
    image: '/images/book5.jpg',
    isbn: '978-2345678901',
    genre: ['Biology', 'Botany'],
    tags: ['Botany', 'Plant Science', 'Ecology'],
    datePublished: '2022-12-05',
    pages: 634,
    language: 'English',
    publisher: 'Al-Jahiz Botanical Society',
    rating: 4.1,
    reviewCount: 12,
    inStock: false,
    featured: false,
  },
  // Additional Chemistry Books
  {
    id: '24',
    title: 'Analytical Chemistry and Instrumentation',
    author: 'Dr. Khalil Al-Shirazi',
    description: 'Modern analytical chemistry techniques, spectroscopy, chromatography, and advanced instrumentation methods.',
    price: 112.40,
    image: '/images/book6.jpg',
    isbn: '978-2456789012',
    genre: ['Chemistry', 'Analytical Chemistry'],
    tags: ['Analytical Chemistry', 'Spectroscopy', 'Instrumentation'],
    datePublished: '2023-04-17',
    pages: 745,
    language: 'English',
    publisher: 'Al-Kindi Analytical Sciences',
    rating: 4.4,
    reviewCount: 18,
    inStock: true,
    featured: false,
  },
  {
    id: '25',
    title: 'Inorganic Chemistry and Materials Science',
    author: 'Prof. Amina Al-Baghdadi',
    description: 'Advanced inorganic chemistry covering coordination compounds, solid-state chemistry, and materials applications.',
    price: 108.90,
    image: '/images/book1.jpg',
    isbn: '978-2567890123',
    genre: ['Chemistry', 'Inorganic Chemistry'],
    tags: ['Inorganic Chemistry', 'Materials Science', 'Coordination'],
    datePublished: '2022-09-25',
    pages: 678,
    language: 'English',
    publisher: 'Ibn Hayyan Materials Institute',
    rating: 3.9,
    reviewCount: 14,
    inStock: true,
    featured: false,
  },
  // Additional Computer Science Books
  {
    id: '26',
    title: 'Machine Learning and Artificial Intelligence',
    author: 'Dr. Tariq Al-Khwarizmi',
    description: 'Comprehensive introduction to machine learning algorithms, neural networks, and AI applications in modern technology.',
    price: 129.95,
    image: '/images/book2.jpg',
    isbn: '978-2678901234',
    genre: ['Computer Science', 'Machine Learning'],
    tags: ['Machine Learning', 'AI', 'Neural Networks'],
    datePublished: '2023-05-20',
    pages: 823,
    language: 'English',
    publisher: 'Al-Jazari AI Institute',
    rating: 4.6,
    reviewCount: 32,
    inStock: true,
    featured: true,
  },
  {
    id: '27',
    title: 'Database Systems and Big Data',
    author: 'Prof. Nadia Al-Isfahani',
    description: 'Modern database design, NoSQL systems, distributed databases, and big data analytics with practical applications.',
    price: 115.75,
    image: '/images/book3.jpg',
    isbn: '978-2789012345',
    genre: ['Computer Science', 'Database Systems'],
    tags: ['Databases', 'Big Data', 'NoSQL'],
    datePublished: '2023-02-14',
    pages: 712,
    language: 'English',
    publisher: 'Al-Kindi Data Sciences',
    rating: 4.2,
    reviewCount: 21,
    inStock: true,
    featured: false,
  },
  {
    id: '28',
    title: 'Computer Networks and Security',
    author: 'Dr. Yusuf Al-Razi',
    description: 'Comprehensive study of computer networks, protocols, cybersecurity, and network administration principles.',
    price: 98.50,
    image: '/images/book4.jpg',
    isbn: '978-2890123456',
    genre: ['Computer Science', 'Network Security'],
    tags: ['Networks', 'Security', 'Protocols'],
    datePublished: '2022-10-30',
    pages: 598,
    language: 'English',
    publisher: 'Al-Biruni Network Systems',
    rating: 4.0,
    reviewCount: 16,
    inStock: true,
    featured: false,
  },
  // Additional Engineering Books
  {
    id: '29',
    title: 'Structural Engineering and Mechanics',
    author: 'Prof. Zahra Al-Muhandis',
    description: 'Advanced structural analysis, design principles, earthquake engineering, and modern construction materials.',
    price: 132.60,
    image: '/images/book5.jpg',
    isbn: '978-2901234567',
    genre: ['Engineering', 'Structural Engineering'],
    tags: ['Structural Engineering', 'Design', 'Construction'],
    datePublished: '2023-01-25',
    pages: 876,
    language: 'English',
    publisher: 'Al-Jazari Engineering Press',
    rating: 4.5,
    reviewCount: 19,
    inStock: true,
    featured: true,
  },
  {
    id: '30',
    title: 'Electrical Engineering and Power Systems',
    author: 'Dr. Ahmad Al-Karkhi',
    description: 'Comprehensive electrical engineering covering circuits, power systems, renewable energy, and smart grid technologies.',
    price: 126.80,
    image: '/images/book6.jpg',
    isbn: '978-3012345678',
    genre: ['Engineering', 'Electrical Engineering'],
    tags: ['Electrical Engineering', 'Power Systems', 'Renewable Energy'],
    datePublished: '2022-08-18',
    pages: 798,
    language: 'English',
    publisher: 'Al-Kindi Electrical Institute',
    rating: 4.3,
    reviewCount: 21,
    inStock: false,
    featured: false,
  },
  {
    id: '31',
    title: 'Mechanical Engineering Design',
    author: 'Prof. Hassan Al-Dimashqi',
    description: 'Machine design, manufacturing processes, materials selection, and CAD applications in modern mechanical engineering.',
    price: 119.45,
    image: '/images/book1.jpg',
    isbn: '978-3123456789',
    genre: ['Engineering', 'Mechanical Engineering'],
    tags: ['Mechanical Engineering', 'Design', 'Manufacturing'],
    datePublished: '2023-03-22',
    pages: 734,
    language: 'English',
    publisher: 'Al-Muhandis Technical Press',
    rating: 4.1,
    reviewCount: 15,
    inStock: true,
    featured: false,
  },
  // Additional Specialized Sciences
  {
    id: '32',
    title: 'Environmental Science and Sustainability',
    author: 'Dr. Leila Al-Baghdadi',
    description: 'Environmental systems, pollution control, climate change mitigation, and sustainable development strategies.',
    price: 113.25,
    image: '/images/book2.jpg',
    isbn: '978-3234567890',
    genre: ['Environmental Science', 'Sustainability'],
    tags: ['Environment', 'Sustainability', 'Climate Change'],
    datePublished: '2023-07-10',
    pages: 656,
    language: 'English',
    publisher: 'Al-Jahiz Environmental Press',
    rating: 4.4,
    reviewCount: 18,
    inStock: true,
    featured: false,
  },
  {
    id: '33',
    title: 'Materials Science and Nanotechnology',
    author: 'Prof. Omar Al-Andalusi',
    description: 'Advanced materials properties, nanoscale phenomena, and applications in electronics, medicine, and energy.',
    price: 138.90,
    image: '/images/book3.jpg',
    isbn: '978-3345678901',
    genre: ['Materials Science', 'Nanotechnology'],
    tags: ['Materials Science', 'Nanotechnology', 'Advanced Materials'],
    datePublished: '2023-05-08',
    pages: 812,
    language: 'English',
    publisher: 'Al-Kindi Nanoscience Institute',
    rating: 4.7,
    reviewCount: 14,
    inStock: true,
    featured: true,
  },
  {
    id: '34',
    title: 'Oceanography and Marine Sciences',
    author: 'Dr. Fatima Al-Mashriqiya',
    description: 'Physical and biological oceanography, marine ecosystems, ocean currents, and climate interactions.',
    price: 107.60,
    image: '/images/book4.jpg',
    isbn: '978-3456789012',
    genre: ['Earth Sciences', 'Oceanography'],
    tags: ['Oceanography', 'Marine Science', 'Ocean Currents'],
    datePublished: '2022-06-14',
    pages: 623,
    language: 'English',
    publisher: 'Al-Biruni Marine Institute',
    rating: 3.8,
    reviewCount: 10,
    inStock: true,
    featured: false,
  },
  {
    id: '35',
    title: 'Atmospheric Physics and Meteorology',
    author: 'Prof. Khalil Al-Shirazi',
    description: 'Atmospheric dynamics, weather systems, climate modeling, and meteorological instrumentation.',
    price: 101.30,
    image: '/images/book5.jpg',
    isbn: '978-3567890123',
    genre: ['Physics', 'Atmospheric Science'],
    tags: ['Atmospheric Physics', 'Meteorology', 'Weather'],
    datePublished: '2022-11-28',
    pages: 587,
    language: 'English',
    publisher: 'Al-Sufi Atmospheric Sciences',
    rating: 4.0,
    reviewCount: 12,
    inStock: false,
    featured: false,
  },
  // Additional Medical Sciences
  {
    id: '36',
    title: 'Human Anatomy and Physiology',
    author: 'Dr. Amina Al-Zahrawi',
    description: 'Comprehensive human anatomy and physiology with clinical correlations and modern imaging techniques.',
    price: 142.75,
    image: '/images/book6.jpg',
    isbn: '978-3678901234',
    genre: ['Medicine', 'Anatomy'],
    tags: ['Anatomy', 'Physiology', 'Medical Education'],
    datePublished: '2023-08-03',
    pages: 923,
    language: 'English',
    publisher: 'Al-Razi Medical Education',
    rating: 4.6,
    reviewCount: 28,
    inStock: true,
    featured: true,
  },
  {
    id: '37',
    title: 'Pharmacology and Drug Development',
    author: 'Prof. Yusuf Al-Kindi',
    description: 'Modern pharmacology, drug mechanisms, clinical pharmacokinetics, and pharmaceutical development processes.',
    price: 128.95,
    image: '/images/book1.jpg',
    isbn: '978-3789012345',
    genre: ['Medicine', 'Pharmacology'],
    tags: ['Pharmacology', 'Drug Development', 'Clinical Medicine'],
    datePublished: '2023-04-12',
    pages: 754,
    language: 'English',
    publisher: 'Ibn Sina Pharmaceutical Press',
    rating: 4.2,
    reviewCount: 19,
    inStock: true,
    featured: false,
  },
  // Additional Interdisciplinary Sciences
  {
    id: '38',
    title: 'Bioinformatics and Computational Biology',
    author: 'Dr. Zahra Al-Tabari',
    description: 'Computational methods in biology, sequence analysis, protein structure prediction, and genomics applications.',
    price: 135.40,
    image: '/images/book2.jpg',
    isbn: '978-3890123456',
    genre: ['Biology', 'Computer Science'],
    tags: ['Bioinformatics', 'Computational Biology', 'Genomics'],
    datePublished: '2023-06-30',
    pages: 812,
    language: 'English',
    publisher: 'Al-Khwarizmi Bioinformatics',
    rating: 4.4,
    reviewCount: 15,
    inStock: true,
    featured: false,
  },
  {
    id: '39',
    title: 'Mathematical Physics and Theoretical Mechanics',
    author: 'Prof. Hassan Al-Biruni',
    description: 'Advanced mathematical methods in physics, group theory, differential geometry, and theoretical mechanics.',
    price: 145.60,
    image: '/images/book3.jpg',
    isbn: '978-3901234567',
    genre: ['Physics', 'Mathematics'],
    tags: ['Mathematical Physics', 'Theoretical Physics', 'Group Theory'],
    datePublished: '2022-12-20',
    pages: 876,
    language: 'English',
    publisher: 'Al-Farabi Theoretical Physics',
    rating: 3.7,
    reviewCount: 0,
    inStock: true,
    featured: false,
  },
  {
    id: '40',
    title: 'Economic Mathematics and Financial Modeling',
    author: 'Dr. Layla Al-Isfahani',
    description: 'Mathematical methods in economics, financial derivatives, risk analysis, and quantitative finance.',
    price: 122.85,
    image: '/images/book4.jpg',
    isbn: '978-4012345678',
    genre: ['Mathematics', 'Economics'],
    tags: ['Financial Mathematics', 'Economics', 'Risk Analysis'],
    datePublished: '2023-02-28',
    pages: 698,
    language: 'English',
    publisher: 'Al-Kindi Economic Mathematics',
    rating: 4.1,
    reviewCount: 0,
    inStock: true,
    featured: false,
  },
  {
    id: '41',
    title: 'Cognitive Science and Psychology',
    author: 'Prof. Omar Al-Ghazali',
    description: 'Interdisciplinary study of mind, cognition, perception, learning, and artificial intelligence applications.',
    price: 116.70,
    image: '/images/book5.jpg',
    isbn: '978-4123456789',
    genre: ['Psychology', 'Cognitive Science'],
    tags: ['Cognitive Science', 'Psychology', 'Perception'],
    datePublished: '2023-09-15',
    pages: 645,
    language: 'English',
    publisher: 'Al-Farabi Cognitive Institute',
    rating: 4.3,
    reviewCount: 21,
    inStock: false,
    featured: false,
  },
  {
    id: '42',
    title: 'Renewable Energy Systems',
    author: 'Dr. Fatima Al-Karkhi',
    description: 'Solar, wind, and hydroelectric power systems, energy storage, grid integration, and sustainability analysis.',
    price: 133.25,
    image: '/images/book6.jpg',
    isbn: '978-4234567890',
    genre: ['Engineering', 'Energy Systems'],
    tags: ['Renewable Energy', 'Solar Power', 'Sustainability'],
    datePublished: '2023-07-25',
    pages: 789,
    language: 'English',
    publisher: 'Al-Jazari Energy Institute',
    rating: 4.5,
    reviewCount: 18,
    inStock: true,
    featured: true,
  },
  {
    id: '43',
    title: 'Space Physics and Astrophysics',
    author: 'Prof. Ahmad Al-Sufi',
    description: 'Space plasma physics, solar-terrestrial interactions, magnetospheres, and space weather phenomena.',
    price: 127.40,
    image: '/images/book1.jpg',
    isbn: '978-4345678901',
    genre: ['Physics', 'Space Science'],
    tags: ['Space Physics', 'Plasma Physics', 'Solar Physics'],
    datePublished: '2022-10-12',
    pages: 712,
    language: 'English',
    publisher: 'Al-Battani Space Sciences',
    rating: 4.2,
    reviewCount: 14,
    inStock: true,
    featured: false,
  },
  {
    id: '44',
    title: 'Robotics and Automation Engineering',
    author: 'Dr. Yusuf Al-Jazari',
    description: 'Robot kinematics, control systems, artificial intelligence in robotics, and industrial automation.',
    price: 139.80,
    image: '/images/book2.jpg',
    isbn: '978-4456789012',
    genre: ['Engineering', 'Robotics'],
    tags: ['Robotics', 'Automation', 'Control Systems'],
    datePublished: '2023-04-05',
    pages: 834,
    language: 'English',
    publisher: 'Al-Jazari Robotics Institute',
    rating: 4.6,
    reviewCount: 1,
    inStock: true,
    featured: true,
  },
  {
    id: '45',
    title: 'Quantum Computing and Information Theory',
    author: 'Prof. Zahra Al-Khawarizmi',
    description: 'Quantum mechanics foundations, quantum algorithms, quantum cryptography, and quantum information processing.',
    price: 148.95,
    image: '/images/book3.jpg',
    isbn: '978-4567890123',
    genre: ['Physics', 'Computer Science'],
    tags: ['Quantum Computing', 'Information Theory', 'Quantum Algorithms'],
    datePublished: '2023-08-20',
    pages: 892,
    language: 'English',
    publisher: 'Al-Kindi Quantum Institute',
    rating: 4.8,
    reviewCount: 16,
    inStock: true,
    featured: true,
  }
];
</file>

<file path="src/app/book/[id]/page.tsx">
// src/app/book/[id]/page.tsx
'use client';

import { useState, useEffect } from 'react';
import { useParams, useRouter } from 'next/navigation';
import Link from 'next/link';
import { books } from '../../data/books';
import { reviews } from '../../data/reviews';
import { Book, CartItem, Review } from '../../types';

export default function BookDetailPage() {
  const [book, setBook] = useState<Book | null>(null);
  const [bookReviews, setBookReviews] = useState<Review[]>([]);
  const [quantity, setQuantity] = useState(1);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  const params = useParams();
  const router = useRouter();
  const { id } = params;

  useEffect(() => {
    if (id) {
      const foundBook = books.find((b) => b.id === id);
      if (foundBook) {
        setBook(foundBook);
        // Get reviews for this book
        const bookReviewsData = reviews.filter((review) => review.bookId === id);
        setBookReviews(bookReviewsData);
      } else {
        setError('Book not found.');
      }
      setIsLoading(false);
    }
  }, [id]);

  const handleAddToCart = () => {
    if (!book) return;

    const cartItem: CartItem = {
      id: `${book.id}-${Date.now()}`,
      bookId: book.id,
      quantity: quantity,
      addedAt: new Date().toISOString(),
    };

    // Retrieve existing cart from localStorage
    const storedCart = localStorage.getItem('cart');
    const cart: CartItem[] = storedCart ? JSON.parse(storedCart) : [];

    // Check if the book is already in the cart
    const existingItemIndex = cart.findIndex((item) => item.bookId === book.id);

    if (existingItemIndex > -1) {
      // Update quantity if item already exists
      cart[existingItemIndex].quantity += quantity;
    } else {
      // Add new item to cart
      cart.push(cartItem);
    }

    // Save updated cart to localStorage
    localStorage.setItem('cart', JSON.stringify(cart));

    // Dispatch a custom event to notify the Navbar
    window.dispatchEvent(new CustomEvent('cartUpdated'));

    // Redirect to the cart page after adding
    router.push('/cart');
  };
  
  const renderStars = (rating: number) => {
    const stars = [];
    const fullStars = Math.floor(rating);
    const hasHalfStar = rating % 1 >= 0.5;
    
    for (let i = 1; i <= 5; i++) {
      if (i <= fullStars) {
        // Full star
        stars.push(
          <svg key={i} className="w-4 h-4 text-yellow-400 fill-current" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
        );
      } else if (i === fullStars + 1 && hasHalfStar) {
        // Half star
        stars.push(
          <div key={i} className="relative w-4 h-4">
            <svg className="w-4 h-4 text-gray-300 fill-current absolute" viewBox="0 0 20 20">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
            </svg>
            <div className="absolute inset-0 overflow-hidden w-1/2">
              <svg className="w-4 h-4 text-yellow-400 fill-current" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
              </svg>
            </div>
          </div>
        );
      } else {
        // Empty star
        stars.push(
          <svg key={i} className="w-4 h-4 text-gray-300 fill-current" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
        );
      }
    }
    return <div className="flex items-center">{stars}</div>;
  };

  const formatDate = (timestamp: string) => {
    const date = new Date(timestamp);
    return date.toLocaleDateString('en-US', { 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    });
  };

  if (isLoading) {
    return <div className="text-center py-10">Loading...</div>;
  }

  if (error) {
    return (
      <div className="text-center py-10">
        <h1 className="text-2xl font-bold text-red-500">{error}</h1>
        <Link href="/" className="text-blue-500 hover:underline mt-4 inline-block cursor-pointer">
          Back to Home
        </Link>
      </div>
    );
  }

  if (!book) {
    return null; // Should be handled by error state
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        {/* Book Image */}
        <div className="relative h-96 md:h-[600px] w-full shadow-lg rounded-lg overflow-hidden bg-gray-200 flex items-center justify-center">
          {/* Book Icon Placeholder */}
          <div className="text-8xl text-gray-400">📚</div>
        </div>

        {/* Book Details */}
        <div className="flex flex-col justify-center">
          <h1 className="text-4xl font-extrabold text-gray-800 mb-2">{book.title}</h1>
          <p className="text-xl text-gray-600 mb-4">by {book.author}</p>
          
          <div className="flex items-center mb-4">
            {renderStars(book.rating)}
            <span className="text-md text-gray-500 ml-2">({book.reviewCount} reviews)</span>
          </div>

          <p className="text-gray-700 mb-6 leading-relaxed">{book.description}</p>

          <div className="mb-4">
            {book.genre.map((g) => (
              <span key={g} className="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">
                {g}
              </span>
            ))}
          </div>

          <div className="text-3xl font-bold text-blue-600 mb-6">${book.price.toFixed(2)}</div>

          <div className="flex items-center space-x-4 mb-6">
            <label htmlFor="quantity" className="font-semibold">Quantity:</label>
            <input
              type="number"
              id="quantity"
              min="1"
              value={quantity}
              onChange={(e) => setQuantity(Math.max(1, parseInt(e.target.value, 10) || 1))}
              className="w-20 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>

          <button 
            onClick={handleAddToCart}
            className="w-full bg-blue-500 text-white py-3 rounded-md hover:bg-blue-600 transition-colors duration-300 text-lg font-semibold cursor-pointer"
          >
            Add to Cart
          </button>

          <Link href="/" className="text-blue-500 hover:underline mt-6 text-center cursor-pointer">
            &larr; Back to Home
          </Link>
        </div>
      </div>

      {/* Reviews Section */}
      <div className="mt-12">
        <h2 className="text-2xl font-bold text-gray-800 mb-6">Customer Reviews</h2>
        
        {bookReviews.length > 0 ? (
          <div className="space-y-6">
            {bookReviews.map((review) => (
              <div key={review.id} className="bg-white p-6 rounded-lg shadow-md border border-gray-200">
                <div className="flex items-start justify-between mb-3">
                  <div className="flex items-center space-x-3">
                    <div className="flex items-center">
                      {renderStars(review.rating)}
                    </div>
                    <span className="text-sm text-gray-500">•</span>
                    <span className="text-sm text-gray-600">{formatDate(review.timestamp)}</span>
                    {review.verified && (
                      <>
                        <span className="text-sm text-gray-500">•</span>
                        <span className="text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full">
                          Verified Purchase
                        </span>
                      </>
                    )}
                  </div>
                </div>
                
                <h3 className="text-lg font-semibold text-gray-800 mb-2">{review.title}</h3>
                <p className="text-gray-700 mb-3 leading-relaxed">{review.comment}</p>
                
                <div className="flex items-center justify-between">
                  <span className="text-sm font-medium text-gray-600">by {review.author}</span>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div className="text-center py-8 bg-gray-50 rounded-lg">
            <p className="text-gray-600">No reviews yet. Be the first to review this book!</p>
          </div>
        )}
      </div>
    </div>
  );
}
</file>

<file path="src/app/page.tsx">
// src/app/page.tsx
'use client';

import { useState } from 'react';
import BookGrid from './components/BookGrid';
import { books } from './data/books';

export default function HomePage() {
  // Simple cart handler for demo purposes
  const handleAddToCart = (bookId: string) => {
    console.log(`Added book ${bookId} to cart`);
    // Here you would typically dispatch to a cart state or call an API
  };

  return (
    <div className="container mx-auto px-4 py-8">
      {/* Welcome Section */}
      <section className="text-center bg-blue-100 p-8 rounded-lg mb-12 shadow-md">
        <h1 className="text-4xl font-extrabold text-gray-800 mb-2">Welcome to the Amana Bookstore!</h1>
        <p className="text-lg text-gray-600">
          Your one-stop shop for the best books. Discover new worlds and adventures.
        </p>
      </section>

      {/* Book Grid */}
      <BookGrid books={books} onAddToCart={handleAddToCart} />
    </div>
  );
}
</file>

</files>
